



...::: Numeric Information :::...



STEP 1:
 Get ArgumentsRaw Serialized Arguments:['get_numeric_info.py']FATAL: there are not enough arguments given to use this tool['args captured:', ['get_numeric_info.py']]



...::: Numeric Information :::...




STEP 1:
 Get Arguments
Raw Serialized Arguments:
['get_numeric_info.py']
FATAL: there are not enough arguments given to use this tool
['args captured:', ['get_numeric_info.py']]




...::: Numeric Information :::...




...::: Numeric Information :::...




...::: Numeric Information :::...
1423348187 : 2015-02-07 17:29:47




STEP 1:
 Get Arguments
Raw Serialized Arguments:
['get_numeric_info.py']
FATAL: there are not enough arguments given to use this tool
['args captured:', ['get_numeric_info.py']]




...::: Numeric Information :::...
1423348241 : 2015-02-07 17:30:41




STEP 1: Get Arguments
Raw Serialized Arguments:
['get_numeric_info.py']
FATAL: there are not enough arguments given to use this tool
['args captured:', ['get_numeric_info.py']]




...::: Numeric Information :::...
1423348273 : 2015-02-07 17:31:13




STEP 1: Get Arguments
Raw Serialized Arguments:
['get_numeric_info.py', '-b', '10', '-v', '5']




...::: Numeric Information :::...
1423348417 : 2015-02-07 17:33:37




STEP 1: Get Arguments
Raw Serialized Arguments:
['get_numeric_info.py', '-b', '10', '-v', '5']
Action Data:
{'value': '5', 'custom_base': 0, 'base': '10'}




...::: Numeric Information :::...
1423348433 : 2015-02-07 17:33:53




STEP 1: Get Arguments
Raw Serialized Arguments:
['get_numeric_info.py', '-b', '10', '-v', '5', '-f', 'asdf']
Action Data:
{'base': '10', 'value': '5', 'custom_base': 0}




...::: Numeric Information :::...
1423352479 : 2015-02-07 18:41:19





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '10', '-v', '5', '-f', 'asdf']
Action Data:
{'custom_base': 0, 'base': '10', 'value': '5'}




...::: Numeric Information :::...
1423353065 : 2015-02-07 18:51:05





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '10', '-v', '5', '-f', 'asdf']
Action Data:
{'value': '5', 'custom_base': 0, 'base': 10}

STEP 2: Convert value to binary representation





...::: Numeric Information :::...
1423353102 : 2015-02-07 18:51:42





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '10', '-v', '5', '-f', 'asdf']
Action Data:
{'value': 5, 'custom_base': 0, 'base': 10}

STEP 2: Convert value to binary representation

Base2: [5]




...::: Numeric Information :::...
1423353150 : 2015-02-07 18:52:30





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '10', '-v', '5', '-f', 'asdf']
Action Data:
{'value': 5, 'custom_base': 0, 'base': 10}

STEP 2: Convert value to binary representation

Base2: [1, 0, 1]




...::: Numeric Information :::...
1423353269 : 2015-02-07 18:54:29





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '10', '-v', '5', '-f', 'asdf']
Action Data:
{'base': 10, 'custom_base': 0, 'value': 5}

STEP 2: Convert value to binary representation

Base2: [1, 0, 1]




...::: Numeric Information :::...
1423353443 : 2015-02-07 18:57:23





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '10', '-v', '5', '-f', 'asdf']
Action Data:
{'value': 5, 'base': 10, 'custom_base': 0}

STEP 2: Convert value to binary representation





...::: Numeric Information :::...
1423353800 : 2015-02-07 19:03:20





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '10', '-v', '5', '-f', 'asdf']
Action Data:
{'value': 5, 'custom_base': 0, 'base': 10}

STEP 2: Convert value to binary representation

Base2: [1, 0, 1]
Base10: [5]
Base16: [5]
BaseXX: []




...::: Numeric Information :::...
1423353809 : 2015-02-07 19:03:29





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '10', '-v', '50', '-f', 'asdf']
Action Data:
{'value': 50, 'custom_base': 0, 'base': 10}

STEP 2: Convert value to binary representation

Base2: [1, 1, 0, 0, 1, 0]
Base10: [5, 0]
Base16: [3, 2]
BaseXX: []




...::: Numeric Information :::...
1423353823 : 2015-02-07 19:03:43





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '10', '-v', '16', '-f', 'asdf']
Action Data:
{'value': 16, 'base': 10, 'custom_base': 0}

STEP 2: Convert value to binary representation

Base2: [1, 0, 0, 0, 0]
Base10: [1, 6]
Base16: [1, 0]
BaseXX: []




...::: Numeric Information :::...
1423353830 : 2015-02-07 19:03:50





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '10', '-v', '15', '-f', 'asdf']
Action Data:
{'value': 15, 'base': 10, 'custom_base': 0}

STEP 2: Convert value to binary representation

Base2: [1, 1, 1, 1]
Base10: [1, 5]
Base16: [15]
BaseXX: []




...::: Numeric Information :::...
1423353858 : 2015-02-07 19:04:18





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '10', '-v', '60', '-f', 'asdf']
Action Data:
{'base': 10, 'value': 60, 'custom_base': 0}

STEP 2: Convert value to binary representation

Base2: [1, 1, 1, 1, 0, 0]
Base10: [6, 0]
Base16: [3, 12]
BaseXX: []




...::: Numeric Information :::...
1423353880 : 2015-02-07 19:04:40





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '10', '-v', '60', '-s']
Action Data:
{'value': 60, 'base': 10, 'custom_base': 0}

STEP 2: Convert value to binary representation

Base2: [1, 1, 1, 1, 0, 0]
Base10: [6, 0]
Base16: [3, 12]
BaseXX: []




...::: Numeric Information :::...
1423353895 : 2015-02-07 19:04:55





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '10', '-v', '60', '-left', '2']
Action Data:
{'custom_base': 0, 'value': 60, 'base': 10}

STEP 2: Convert value to binary representation

Base2: [1, 1, 1, 1, 0, 0]
Base10: [6, 0]
Base16: [3, 12]
BaseXX: []




...::: Numeric Information :::...
1423354951 : 2015-02-07 19:22:31





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '10', '-v', '60', '-left', '2']
Action Data:
{'base': 10, 'custom_base': 0, 'value': 60}

STEP 2: Convert value to binary representation


STEP 3: Store Data





...::: Numeric Information :::...
1423354965 : 2015-02-07 19:22:45





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '10', '-v', '60', '-left', '2']
Action Data:
{'base': 10, 'custom_base': 0, 'value': 60}

STEP 2: Convert value to binary representation





...::: Numeric Information :::...
1423355150 : 2015-02-07 19:25:50





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '10', '-v', '60', '-left', '2']
Action Data:
{'base': 10, 'value': 60, 'custom_base': 0}

STEP 2: Convert value to binary representation





...::: Numeric Information :::...
1423355438 : 2015-02-07 19:30:38





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '10', '-v', '60', '-left', '2']
Action Data:
{'value': 60, 'custom_base': 0, 'base': 10}

STEP 2: Convert value to binary representation





...::: Numeric Information :::...
1423355476 : 2015-02-07 19:31:16





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-left', '2']
Action Data:
{'base': 2, 'custom_base': 0, 'value': 60}

STEP 2: Convert value to binary representation





...::: Numeric Information :::...
1423355571 : 2015-02-07 19:32:51





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-left', '2']
Action Data:
{'custom_base': 0, 'value': 60, 'base': 2}

STEP 2: Convert value to binary representation

<NumericInfo_class.NumericInfo object at 0xb71fbc0c>




...::: Numeric Information :::...
1423355612 : 2015-02-07 19:33:32





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-left', '2']
Action Data:
{'base': 2, 'custom_base': 0, 'value': 60}

STEP 2: Convert value to binary representation

<NumericInfo_class.NumericInfo object at 0xb716d84c>




...::: Numeric Information :::...
1423356403 : 2015-02-07 19:46:43





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-left', '2']
Action Data:
{'custom_base': 0, 'base': 2, 'value': 60}

STEP 2: Convert value to binary representation

<NumericInfo_class.NumericInfo object at 0xb719664c>




...::: Numeric Information :::...
1423356442 : 2015-02-07 19:47:22





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-left', '2']
Action Data:
{'custom_base': 0, 'value': 60, 'base': 2}

STEP 2: Convert value to binary representation

<NumericInfo_class.NumericInfo object at 0xb717666c>




...::: Numeric Information :::...
1423501215 : 2015-02-09 12:00:15





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-left', '2']
Action Data:
{'custom_base': 0, 'base': 2, 'value': 60}

STEP 2: Convert value to binary representation

<NumericInfo_class.NumericInfo object at 0xb7187e2c>




...::: Numeric Information :::...
1423501444 : 2015-02-09 12:04:04





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-left', '2']
Action Data:
{'value': 60, 'custom_base': 0, 'base': 2}

STEP 2: Convert value to binary representation

<NumericInfo_class.NumericInfo object at 0xb71fe68c>




...::: Numeric Information :::...
1423501881 : 2015-02-09 12:11:21





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-left', '2']
Action Data:
{'custom_base': 0, 'base': 2, 'value': 60}

STEP 2: Convert value to binary representation

<NumericInfo_class.NumericInfo object at 0xb71fd68c>




...::: Numeric Information :::...
1423501905 : 2015-02-09 12:11:45





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-left', '2']
Action Data:
{'base': 2, 'custom_base': 0, 'value': 60}

STEP 2: Convert value to binary representation

<NumericInfo_class.NumericInfo object at 0xb723166c>




...::: Numeric Information :::...
1423502448 : 2015-02-09 12:20:48





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-left', '2']
Action Data:
{'custom_base': 0, 'value': 60, 'base': 2}

STEP 2: Convert value to binary representation

<NumericInfo_class.NumericInfo object at 0xb718c62c>




...::: Numeric Information :::...
1423502504 : 2015-02-09 12:21:44





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-left', '2']
Action Data:
{'custom_base': 0, 'base': 2, 'value': 60}

STEP 2: Convert value to binary representation

<NumericInfo_class.NumericInfo object at 0xb725c62c>
{'__NumericInfo__': {'base10': [6, 0], 'raw_value': 60, 'base16': [3, 12], 'custom': '', 'base2': [1, 1, 1, 1, 0, 0]}}




...::: Numeric Information :::...
1423502659 : 2015-02-09 12:24:19





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-left', '2']
Action Data:
{'value': 60, 'base': 2, 'custom_base': 0}

STEP 2: Convert value to binary representation

<NumericInfo_class.NumericInfo object at 0xb722760c>




...::: Numeric Information :::...
1423502673 : 2015-02-09 12:24:33





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-left', '2']
Action Data:
{'base': 2, 'custom_base': 0, 'value': 60}

STEP 2: Convert value to binary representation

<NumericInfo_class.NumericInfo object at 0xb71b762c>
{'__NumericInfo__': {'base10': [6, 0], 'custom': '', 'base2': [1, 1, 1, 1, 0, 0], 'raw_value': 60, 'base16': [3, 12]}}




...::: Numeric Information :::...
1423502781 : 2015-02-09 12:26:21





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-left', '2']
Action Data:
{'custom_base': 0, 'value': 60, 'base': 2}

STEP 2: Convert value to binary representation

<NumericInfo_class.NumericInfo object at 0xb724d62c>
{'__NumericInfo__': {'base2': [1, 1, 1, 1, 0, 0], 'base10': [6, 0], 'base16': [3, 12], 'raw_value': 60, 'custom': ''}}




...::: Numeric Information :::...
1423502916 : 2015-02-09 12:28:36





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-left', '2']
Action Data:
{'value': 60, 'custom_base': 0, 'base': 2}

STEP 2: Convert value to binary representation

<NumericInfo_class.NumericInfo object at 0xb723d62c>
{'__NumericInfo__': {'custom': '', 'base2': [1, 1, 1, 1, 0, 0], 'base16': [3, 12], 'raw_value': 60, 'base10': [6, 0]}}




...::: Numeric Information :::...
1423502992 : 2015-02-09 12:29:52





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-left', '2']
Action Data:
{'value': 60, 'custom_base': 0, 'base': 2}

STEP 2: Convert value to binary representation

<NumericInfo_class.NumericInfo object at 0xb717762c>
{'__NumericInfo__': {'base2': [1, 1, 1, 1, 0, 0], 'base16': [3, 12], 'base10': [6, 0], 'raw_value': 60, 'custom': ''}}




...::: Numeric Information :::...
1423503059 : 2015-02-09 12:30:59





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-left', '2']
Action Data:
{'value': 60, 'custom_base': 0, 'base': 2}

STEP 2: Convert value to binary representation

<NumericInfo_class.NumericInfo object at 0xb724d62c>
{'__NumericInfo__': {'raw_value': 60, 'custom': '', 'base2': [1, 1, 1, 1, 0, 0], 'base16': [3, 12], 'base10': [6, 0]}}




...::: Numeric Information :::...
1423503175 : 2015-02-09 12:32:55





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-left', '2']
Action Data:
{'value': 60, 'custom_base': 0, 'base': 2}

STEP 2: Convert value to binary representation

<NumericInfo_class.NumericInfo object at 0xb724e62c>
{'__NumericInfo__': {'custom': '', 'base10': [6, 0], 'base16': [3, 12], 'base2': [1, 1, 1, 1, 0, 0], 'raw_value': 60}}




...::: Numeric Information :::...
1423503208 : 2015-02-09 12:33:28





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-left', '2']
Action Data:
{'base': 2, 'value': 60, 'custom_base': 0}

STEP 2: Convert value to binary representation

{}
{'__NumericInfo__': {'base2': [1, 1, 1, 1, 0, 0], 'raw_value': 60, 'base10': [6, 0], 'base16': [3, 12], 'custom': ''}}




...::: Numeric Information :::...
1423503211 : 2015-02-09 12:33:31





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-left', '2']
Action Data:
{'value': 60, 'base': 2, 'custom_base': 0}

STEP 2: Convert value to binary representation

{}
{'__NumericInfo__': {'raw_value': 60, 'base10': [6, 0], 'custom': '', 'base16': [3, 12], 'base2': [1, 1, 1, 1, 0, 0]}}




...::: Numeric Information :::...
1423503275 : 2015-02-09 12:34:35





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-left', '2']
Action Data:
{'value': 60, 'base': 2, 'custom_base': 0}

STEP 2: Convert value to binary representation

<NumericInfo_class.NumericInfo object at 0xb724562c>
{'__NumericInfo__': {'base10': [6, 0], 'custom': '', 'base16': [3, 12], 'base2': [1, 1, 1, 1, 0, 0], 'raw_value': 60}}




...::: Numeric Information :::...
1423503483 : 2015-02-09 12:38:03





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-left', '2']
Action Data:
{'base': 2, 'custom_base': 0, 'value': 60}

STEP 2: Convert value to binary representation

<NumericInfo_class.NumericInfo object at 0xb71c766c>
{'__NumericInfo__': {'base2': [1, 1, 1, 1, 0, 0], 'raw_value': 60, 'base16': [3, 12], 'base10': [6, 0], 'custom': ''}}




...::: Numeric Information :::...
1423504997 : 2015-02-09 13:03:17





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-left', '2']
Action Data:
{'base': 2, 'custom_base': 0, 'value': 60}

STEP 2: Convert value to binary representation

<NumericInfo_class.NumericInfo object at 0xb71d9e2c>
{'__NumericInfo__': {'base16': [3, 12], 'base10': [6, 0], 'custom': '', 'raw_value': 60, 'base2': [1, 1, 1, 1, 0, 0]}}




...::: Numeric Information :::...
1423505029 : 2015-02-09 13:03:49





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-left', '2']
Action Data:
{'value': 60, 'custom_base': 0, 'base': 2}

STEP 2: Convert value to binary representation

<NumericInfo_class.NumericInfo object at 0xb719266c>
{'__NumericInfo__': {'base10': [6, 0], 'raw_value': 60, 'base16': [3, 12], 'custom': '', 'base2': [1, 1, 1, 1, 0, 0]}}




...::: Numeric Information :::...
1423505213 : 2015-02-09 13:06:53





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-left', '2']
Action Data:
{'base': 2, 'value': 60, 'custom_base': 0}

STEP 2: Convert value to binary representation

<NumericInfo_class.NumericInfo object at 0xb720466c>
{'__NumericInfo__': {'custom': '', 'base2': [1, 1, 1, 1, 0, 0], 'base16': [3, 12], 'raw_value': 60, 'base10': [6, 0]}}
None




...::: Numeric Information :::...
1423505445 : 2015-02-09 13:10:45





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-left', '2']
Action Data:
{'value': 60, 'custom_base': 0, 'base': 2}

STEP 2: Convert value to binary representation

<NumericInfo_class.NumericInfo object at 0xb71a364c>
{'__NumericInfo__': {'base10': [6, 0], 'base16': [3, 12], 'raw_value': 60, 'base2': [1, 1, 1, 1, 0, 0], 'custom': ''}}




...::: Numeric Information :::...
1423505463 : 2015-02-09 13:11:03





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-left', '2']
Action Data:
{'custom_base': 0, 'value': 60, 'base': 2}

STEP 2: Convert value to binary representation

<NumericInfo_class.NumericInfo object at 0xb71f564c>
{'__NumericInfo__': {'custom': '', 'base10': [6, 0], 'base16': [3, 12], 'raw_value': 60, 'base2': [1, 1, 1, 1, 0, 0]}}
<NumericInfo_class.NumericInfo object at 0xb71f56ec>




...::: Numeric Information :::...
1423508383 : 2015-02-09 13:59:43





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-left', '2']
Action Data:
{'value': 60, 'base': 2, 'custom_base': 0}

STEP 2: Convert value to binary representation

<NumericInfo_class.NumericInfo object at 0xb719e64c>
{'__NumericInfo__': {'custom': '', 'base16': [3, 12], 'raw_value': 60, 'base2': [1, 1, 1, 1, 0, 0], 'base10': [6, 0]}}
<NumericInfo_class.NumericInfo object at 0xb719e6ec>




...::: Numeric Information :::...
1423508424 : 2015-02-09 14:00:24





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-left', '2']
Action Data:
{'base': 2, 'value': 60, 'custom_base': 0}

STEP 2: Convert value to binary representation

<NumericInfo_class.NumericInfo object at 0xb71d664c>
{'__NumericInfo__': {'custom': '', 'raw_value': 60, 'base10': [6, 0], 'base16': [3, 12], 'base2': [1, 1, 1, 1, 0, 0]}}
<NumericInfo_class.NumericInfo object at 0xb71d66ec>




...::: Numeric Information :::...
1423508446 : 2015-02-09 14:00:46





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-left', '2']
Action Data:
{'base': 2, 'value': 60, 'custom_base': 0}

STEP 2: Convert value to binary representation

<NumericInfo_class.NumericInfo object at 0xb71ca64c>
{'__NumericInfo__': {'custom': '', 'base10': [6, 0], 'raw_value': 60, 'base16': [3, 12], 'base2': [1, 1, 1, 1, 0, 0]}}
<NumericInfo_class.NumericInfo object at 0xb71ca6ec>




...::: Numeric Information :::...
1423508474 : 2015-02-09 14:01:14





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-left', '2']
Action Data:
{"value": 60, "base": 2, "custom_base": 0}

STEP 2: Convert value to binary representation

<NumericInfo_class.NumericInfo object at 0xb71abf0c>
{"__NumericInfo__": {"base16": [3, 12], "base2": [1, 1, 1, 1, 0, 0], "raw_value": 60, "custom": "", "base10": [6, 0]}}
<NumericInfo_class.NumericInfo object at 0xb71abf8c>




...::: Numeric Information :::...
1423508476 : 2015-02-09 14:01:16





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-left', '2']
Action Data:
{"custom_base": 0, "base": 2, "value": 60}

STEP 2: Convert value to binary representation

<NumericInfo_class.NumericInfo object at 0xb7204eac>
{"__NumericInfo__": {"base10": [6, 0], "custom": "", "base2": [1, 1, 1, 1, 0, 0], "base16": [3, 12], "raw_value": 60}}
<NumericInfo_class.NumericInfo object at 0xb720c74c>




...::: Numeric Information :::...
1423508560 : 2015-02-09 14:02:40





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-left', '2']
Action Data:
{
    "base": 2,
    "value": 60,
    "custom_base": 0
}

STEP 2: Convert value to binary representation

<NumericInfo_class.NumericInfo object at 0xb7233f2c>
{
    "__NumericInfo__": {
        "custom": "",
        "raw_value": 60,
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ]
    }
}
<NumericInfo_class.NumericInfo object at 0xb7233fcc>




...::: Numeric Information :::...
1423508591 : 2015-02-09 14:03:11





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-left', '2']
Action Data:
{
    "base": 2,
    "custom_base": 0,
    "value": 60
}

STEP 2: Convert value to binary representation

<NumericInfo_class.NumericInfo object at 0xb724ff2c>
{
    "__NumericInfo__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom": "",
        "raw_value": 60
    }
}
<NumericInfo_class.NumericInfo object at 0xb724ffec>




...::: Numeric Information :::...
1423508970 : 2015-02-09 14:09:30





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-left', '2']
Action Data:
{
    "base": 2,
    "custom_base": 0,
    "value": 60
}

STEP 2: Create NumericInfo Object

<NumericInfo_class.NumericInfo object at 0xb7188f2c>
{
    "__NumericInfo__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom": "",
        "raw_value": 60
    }
}
<NumericInfo_class.NumericInfo object at 0xb7188fec>




...::: Numeric Information :::...
1423511117 : 2015-02-09 14:45:17





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-left', '2']
Action Data:
{
    "base": 2,
    "bitshift": null,
    "custom_base": 0,
    "value": 60
}

STEP 2: Create NumericInfo Object

<NumericInfo_class.NumericInfo object at 0xb72331cc>
{
    "__NumericInfo__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom": "",
        "raw_value": 60
    }
}




...::: Numeric Information :::...
1423511203 : 2015-02-09 14:46:43





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-left', '2']
Action Data:
{
    "base": 2,
    "bitshift": null,
    "custom_base": 0,
    "value": 60
}

STEP 2: Create NumericInfo Object

<NumericInfo_class.NumericInfo object at 0xb71f19ac>
{
    "__NumericInfo__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom": "",
        "raw_value": 60
    }
}

done!





...::: Numeric Information :::...
1423511215 : 2015-02-09 14:46:55





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '--left', '2']
Action Data:
{
    "base": 2,
    "bitshift": null,
    "bitshift_operation": "<<",
    "bitshift_value": 2,
    "custom_base": 0,
    "value": 60
}

STEP 2: Create NumericInfo Object

<NumericInfo_class.NumericInfo object at 0xb71f79ac>
{
    "__NumericInfo__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom": "",
        "raw_value": 60
    }
}

STEP 2.5: Detected bitshift request. Performing shift





...::: Numeric Information :::...
1423511226 : 2015-02-09 14:47:06





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '--right', '2']
Action Data:
{
    "base": 2,
    "bitshift": null,
    "bitshift_operation": ">>",
    "bitshift_value": 2,
    "custom_base": 0,
    "value": 60
}

STEP 2: Create NumericInfo Object

<NumericInfo_class.NumericInfo object at 0xb71739ac>
{
    "__NumericInfo__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom": "",
        "raw_value": 60
    }
}

STEP 2.5: Detected bitshift request. Performing shift





...::: Numeric Information :::...
1423511231 : 2015-02-09 14:47:11





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-r', '2']
Action Data:
{
    "base": 2,
    "bitshift": null,
    "bitshift_operation": ">>",
    "bitshift_value": 2,
    "custom_base": 0,
    "value": 60
}

STEP 2: Create NumericInfo Object

<NumericInfo_class.NumericInfo object at 0xb72249ac>
{
    "__NumericInfo__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom": "",
        "raw_value": 60
    }
}

STEP 2.5: Detected bitshift request. Performing shift





...::: Numeric Information :::...
1423511369 : 2015-02-09 14:49:29





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-r', '2']
Action Data:
{
    "base": 2,
    "bitshift": null,
    "bitshift_operation": ">>",
    "bitshift_value": 2,
    "custom_base": 0,
    "value": 60
}

STEP 2: Create NumericInfo Object

<NumericInfo_class.NumericInfo object at 0xb720f9ac>
{
    "__NumericInfo__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom": "",
        "raw_value": 60
    }
}

STEP 2.5: Detected bitshift request. Performing shift





...::: Numeric Information :::...
1423511532 : 2015-02-09 14:52:12





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-r', '2']
Action Data:
{
    "base": 2,
    "bitshift": null,
    "bitshift_operation": ">>",
    "bitshift_value": 2,
    "custom_base": 0,
    "value": 60
}

STEP 2: Create NumericInfo Object

<NumericInfo_class.NumericInfo object at 0xb72119ac>
{
    "__NumericInfo__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom": "",
        "raw_value": 60
    }
}

STEP 2.5: Detected bitshift request. Performing shift





...::: Numeric Information :::...
1423511602 : 2015-02-09 14:53:22





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-r', '2']
Action Data:
{
    "base": 2,
    "bitshift": null,
    "bitshift_operation": ">>",
    "bitshift_value": 2,
    "custom_base": 0,
    "value": 60
}

STEP 2: Create NumericInfo Object

<NumericInfo_class.NumericInfo object at 0xb71789ac>
{
    "__NumericInfo__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom": "",
        "raw_value": 60
    }
}

STEP 2.5: Detected bitshift request. Performing shift





...::: Numeric Information :::...
1423511666 : 2015-02-09 14:54:26





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-r', '2']
Action Data:
{
    "base": 2,
    "bitshift": null,
    "bitshift_operation": ">>",
    "bitshift_value": 2,
    "custom_base": 0,
    "value": 60
}

STEP 2: Create NumericInfo Object

<NumericInfo_class.NumericInfo object at 0xb71789ac>
{
    "__NumericInfo__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom": "",
        "raw_value": 60
    }
}

STEP 2.5: Detected bitshift request. Performing shift





...::: Numeric Information :::...
1423511736 : 2015-02-09 14:55:36





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-r', '2']
Action Data:
{
    "base": 2,
    "bitshift": null,
    "bitshift_operation": ">>",
    "bitshift_value": 2,
    "custom_base": 0,
    "value": 60
}

STEP 2: Create NumericInfo Object

<NumericInfo_class.NumericInfo object at 0xb71af9ac>
{
    "__NumericInfo__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom": "",
        "raw_value": 60
    }
}

STEP 2.5: Detected bitshift request. Performing shift





...::: Numeric Information :::...
1423511774 : 2015-02-09 14:56:14





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-r', '2']
Action Data:
{
    "base": 2,
    "bitshift": null,
    "bitshift_operation": ">>",
    "bitshift_value": 2,
    "custom_base": 0,
    "value": 60
}

STEP 2: Create NumericInfo Object

<NumericInfo_class.NumericInfo object at 0xb71da9ac>
{
    "__NumericInfo__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom": "",
        "raw_value": 60
    }
}

STEP 2.5: Detected bitshift request. Performing shift





...::: Numeric Information :::...
1423511793 : 2015-02-09 14:56:33





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-r', '2']
Action Data:
{
    "base": 2,
    "bitshift": null,
    "bitshift_operation": ">>",
    "bitshift_value": 2,
    "custom_base": 0,
    "value": 60
}

STEP 2: Create NumericInfo Object

<NumericInfo_class.NumericInfo object at 0xb71879ac>
{
    "__NumericInfo__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom": "",
        "raw_value": 60
    }
}

STEP 2.5: Detected bitshift request. Performing shift





...::: Numeric Information :::...
1423511843 : 2015-02-09 14:57:23





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-r', '2']
Action Data:
{
    "base": 2,
    "bitshift": null,
    "bitshift_operation": ">>",
    "bitshift_value": 2,
    "custom_base": 0,
    "value": 60
}

STEP 2: Create NumericInfo Object

<NumericInfo_class.NumericInfo object at 0xb716e9ac>
{
    "__NumericInfo__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom": "",
        "raw_value": 60
    }
}

STEP 2.5: Detected bitshift request. Performing shift





...::: Numeric Information :::...
1423511853 : 2015-02-09 14:57:33





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-r', '2']
Action Data:
{
    "base": 2,
    "bitshift": null,
    "bitshift_operation": ">>",
    "bitshift_value": 2,
    "custom_base": 0,
    "value": 60
}

STEP 2: Create NumericInfo Object

<NumericInfo_class.NumericInfo object at 0xb71ea9ac>
{
    "__NumericInfo__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom": "",
        "raw_value": 60
    }
}

STEP 2.5: Detected bitshift request. Performing shift





...::: Numeric Information :::...
1423511942 : 2015-02-09 14:59:02





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-r', '2']
Action Data:
{
    "base": 2,
    "bitshift": null,
    "bitshift_operation": ">>",
    "bitshift_value": 2,
    "custom_base": 0,
    "value": 60
}

STEP 2: Create NumericInfo Object

<NumericInfo_class.NumericInfo object at 0xb71d118c>
{
    "__NumericInfo__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom": "",
        "raw_value": 60
    }
}

STEP 2.5: Detected bitshift request. Performing shift





...::: Numeric Information :::...
1423512087 : 2015-02-09 15:01:27





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-r', '2']
Action Data:
{
    "base": 2,
    "bitshift": null,
    "bitshift_operation": ">>",
    "bitshift_value": 2,
    "custom_base": 0,
    "value": 60
}

STEP 2: Create NumericInfo Object

<NumericInfo_class.NumericInfo object at 0xb723616c>
{
    "__NumericInfo__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom": "",
        "raw_value": 60
    }
}

STEP 2.5: Detected bitshift request. Performing shift





...::: Numeric Information :::...
1423512253 : 2015-02-09 15:04:13





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-r', '2']
Action Data:
{
    "base": 2,
    "bitshift": null,
    "bitshift_operation": ">>",
    "bitshift_value": 2,
    "custom_base": 0,
    "value": 60
}

STEP 2: Create NumericInfo Object

<NumericInfo_class.NumericInfo object at 0xb723816c>
{
    "__NumericInfo__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom": "",
        "raw_value": 60
    }
}

STEP 2.5: Detected bitshift request. Performing shift





...::: Numeric Information :::...
1423512318 : 2015-02-09 15:05:18





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-r', '2']
Action Data:
{
    "base": 2,
    "bitshift": null,
    "bitshift_operation": ">>",
    "bitshift_value": 2,
    "custom_base": 0,
    "value": 60
}

STEP 2: Create NumericInfo Object

<NumericInfo_class.NumericInfo object at 0xb721f16c>
{
    "__NumericInfo__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom": "",
        "raw_value": 60
    }
}

STEP 2.5: Detected bitshift request. Performing shift





...::: Numeric Information :::...
1423514672 : 2015-02-09 15:44:32





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-r', '2']
Action Data:
{
    "base": 2,
    "bitshift_operation": ">>",
    "bitshift_value": 2,
    "custom_base": 0,
    "value": "111100"
}

STEP 2: Create NumericInfo Object

<NumericInfo_class.NumericInfo object at 0xb725e1ac>
{
    "__NumericInfo__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom": "",
        "int_value": 60,
        "raw_base": 2,
        "raw_value": "111100"
    }
}

STEP 2.5: Detected bitshift request. Performing shift





...::: Numeric Information :::...
1423514793 : 2015-02-09 15:46:33





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-r', '2']
Action Data:
{
    "base": 2,
    "bitshift_operation": ">>",
    "bitshift_value": 2,
    "custom_base": 0,
    "value": "111100"
}

STEP 2: Create NumericInfo Object

<NumericInfo_class.NumericInfo object at 0xb71d81ac>
{
    "__NumericInfo__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom": "",
        "int_value": 60,
        "raw_base": 2,
        "raw_value": "111100"
    }
}

STEP 2.5: Detected bitshift request. Performing shift





...::: Numeric Information :::...
1423514817 : 2015-02-09 15:46:57





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-r', '2']
Action Data:
{
    "base": 2,
    "bitshift_operation": ">>",
    "bitshift_value": 2,
    "custom_base": 0,
    "value": "111100"
}

STEP 2: Create NumericInfo Object

<NumericInfo_class.NumericInfo object at 0xb71ad1ac>
{
    "__NumericInfo__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom": "",
        "int_value": 60,
        "raw_base": 2,
        "raw_value": "111100"
    }
}

STEP 2.5: Detected bitshift request. Performing shift





...::: Numeric Information :::...
1423514871 : 2015-02-09 15:47:51





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-r', '2']
Action Data:
{
    "base": 2,
    "bitshift_operation": ">>",
    "bitshift_value": 2,
    "custom_base": 0,
    "value": "111100"
}

STEP 2: Create NumericInfo Object

<NumericInfo_class.NumericInfo object at 0xb717e1ac>
{
    "__NumericInfo__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom": "",
        "int_value": 60,
        "raw_base": 2,
        "raw_value": "111100"
    }
}

STEP 2.5: Detected bitshift request. Performing shift





...::: Numeric Information :::...
1423515010 : 2015-02-09 15:50:10





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-r', '2']
Action Data:
{
    "base": 2,
    "bitshift_operation": ">>",
    "bitshift_value": 2,
    "custom_base": 0,
    "value": "111100"
}

STEP 2: Create NumericInfo Object

<NumericInfo_class.NumericInfo object at 0xb724c1ac>
{
    "__NumericInfo__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom": "",
        "int_value": 60,
        "raw_base": 2,
        "raw_value": "111100"
    }
}

STEP 2.5: Detected bitshift request. Performing shift





...::: Numeric Information :::...
1423515132 : 2015-02-09 15:52:12





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-r', '2']
Action Data:
{
    "base": 2,
    "bitshift_operation": ">>",
    "bitshift_value": 2,
    "custom_base": 0,
    "value": "111100"
}

STEP 2: Create NumericInfo Object

<NumericInfo_class.NumericInfo object at 0xb71a71ac>
{
    "__NumericInfo__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom": "",
        "int_value": 60,
        "raw_base": 2,
        "raw_value": "111100"
    }
}

STEP 2.5: Detected bitshift request. Performing shift





...::: Numeric Information :::...
1423515359 : 2015-02-09 15:55:59





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-r', '2']
Action Data:
{
    "base": 2,
    "bitshift_operation": ">>",
    "bitshift_value": 2,
    "custom_base": 0,
    "value": "111100"
}

STEP 2: Create NumericInfo Object

<NumericInfo_class.NumericInfo object at 0xb71821ac>
{
    "__NumericInfo__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom": "",
        "int_value": 60,
        "raw_base": 2,
        "raw_value": "111100"
    }
}

STEP 2.5: Detected bitshift request. Performing shift





...::: Numeric Information :::...
1423515380 : 2015-02-09 15:56:20





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-r', '2']
Action Data:
{
    "base": 2,
    "bitshift_operation": ">>",
    "bitshift_value": 2,
    "custom_base": 0,
    "value": "111100"
}

STEP 2: Create NumericInfo Object

<NumericInfo_class.NumericInfo object at 0xb718d1cc>
{
    "__NumericInfo__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom": "",
        "int_value": 60,
        "raw_base": 2,
        "raw_value": "111100"
    }
}

STEP 2.5: Detected bitshift request. Performing shift





...::: Numeric Information :::...
1423515462 : 2015-02-09 15:57:42





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-r', '2']
Action Data:
{
    "base": 2,
    "bitshift_operation": ">>",
    "bitshift_value": 2,
    "custom_base": 0,
    "value": "111100"
}

STEP 2: Create NumericInfo Object

<NumericInfo_class.NumericInfo object at 0xb720c1cc>
{
    "__NumericInfo__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom": "",
        "int_value": 60,
        "raw_base": 2,
        "raw_value": "111100"
    }
}

STEP 2.5: Detected bitshift request. Performing shift





...::: Numeric Information :::...
1423515501 : 2015-02-09 15:58:21





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-r', '2']
Action Data:
{
    "base": 2,
    "bitshift_operation": ">>",
    "bitshift_value": 2,
    "custom_base": 0,
    "value": "111100"
}

STEP 2: Create NumericInfo Object

<NumericInfo_class.NumericInfo object at 0xb71851cc>
{
    "__NumericInfo__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom": "",
        "int_value": 60,
        "raw_base": 2,
        "raw_value": "111100"
    }
}

STEP 2.5: Detected bitshift request. Performing shift





...::: Numeric Information :::...
1423515578 : 2015-02-09 15:59:38





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-r', '2']
Action Data:
{
    "base": 2,
    "bitshift_operation": ">>",
    "bitshift_value": 2,
    "custom_base": 0,
    "value": "111100"
}

STEP 2: Create NumericInfo Object

<NumericInfo_class.NumericInfo object at 0xb72551ac>
{
    "__NumericInfo__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom": "",
        "int_value": 60,
        "raw_base": 2,
        "raw_value": "111100"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericInfo_class.NumericInfo object at 0xb725526c>
{
    "__NumericInfo__": {
        "base10": [
            1,
            5
        ],
        "base16": [
            15
        ],
        "base2": [
            1,
            1,
            1,
            1
        ],
        "custom": "",
        "int_value": 15,
        "raw_base": 10,
        "raw_value": "15"
    }
}

done!





...::: Numeric Information :::...
1423515862 : 2015-02-09 16:04:22





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '2', '-v', '111100', '-r', '2']
Action Data:
{
    "base": 2,
    "bitshift_operation": ">>",
    "bitshift_value": 2,
    "custom_base": 0,
    "value": "111100"
}

STEP 2: Create NumericInfo Object

<NumericInfo_class.NumericInfo object at 0xb71af1ac>
{
    "__NumericInfo__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom": "",
        "int_value": 60,
        "raw_base": 2,
        "raw_value": "111100"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericInfo_class.NumericInfo object at 0xb71af26c>
{
    "__NumericInfo__": {
        "base10": [
            1,
            5
        ],
        "base16": [
            15
        ],
        "base2": [
            1,
            1,
            1,
            1
        ],
        "custom": "",
        "int_value": 15,
        "raw_base": 10,
        "raw_value": "15"
    }
}

STEP 3: Detected bitshift request. Performing shift


done!





...::: Numeric Information :::...
1423515885 : 2015-02-09 16:04:45





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '60', '-r', '2']
Action Data:
{
    "base": 10,
    "bitshift_operation": ">>",
    "bitshift_value": 2,
    "custom_base": 0,
    "value": "60"
}

STEP 2: Create NumericInfo Object

<NumericInfo_class.NumericInfo object at 0xb719e96c>
{
    "__NumericInfo__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom": "",
        "int_value": 60,
        "raw_base": 10,
        "raw_value": "60"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericInfo_class.NumericInfo object at 0xb719ea2c>
{
    "__NumericInfo__": {
        "base10": [
            1,
            5
        ],
        "base16": [
            15
        ],
        "base2": [
            1,
            1,
            1,
            1
        ],
        "custom": "",
        "int_value": 15,
        "raw_base": 10,
        "raw_value": "15"
    }
}

STEP 3: Detected bitshift request. Performing shift


done!





...::: Numeric Information :::...
1423515897 : 2015-02-09 16:04:57





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '60', '-r', '2', '-c', '64']
Action Data:
{
    "base": 10,
    "bitshift_operation": ">>",
    "bitshift_value": 2,
    "custom_base": 64,
    "value": "60"
}

STEP 2: Create NumericInfo Object

<NumericInfo_class.NumericInfo object at 0xb71989ac>
{
    "__NumericInfo__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom": "",
        "int_value": 60,
        "raw_base": 10,
        "raw_value": "60"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericInfo_class.NumericInfo object at 0xb7198a6c>
{
    "__NumericInfo__": {
        "base10": [
            1,
            5
        ],
        "base16": [
            15
        ],
        "base2": [
            1,
            1,
            1,
            1
        ],
        "custom": "",
        "int_value": 15,
        "raw_base": 10,
        "raw_value": "15"
    }
}

STEP 3: Detected bitshift request. Performing shift


done!





...::: Numeric Information :::...
1423515946 : 2015-02-09 16:05:46





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '60', '-r', '2', '-c', '64', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 64,
    "value": "60"
}

STEP 2: Create NumericInfo Object

<NumericInfo_class.NumericInfo object at 0xb71619cc>
{
    "__NumericInfo__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom": "",
        "int_value": 60,
        "raw_base": 10,
        "raw_value": "60"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericInfo_class.NumericInfo object at 0xb7161a8c>
{
    "__NumericInfo__": {
        "base10": [
            1,
            2,
            0
        ],
        "base16": [
            7,
            8
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0,
            0
        ],
        "custom": "",
        "int_value": 120,
        "raw_base": 10,
        "raw_value": "120"
    }
}

STEP 3: Detected bitshift request. Performing shift


done!





...::: Numeric Information :::...
1423517685 : 2015-02-09 16:34:45





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '60', '-r', '2', '-c', '64', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 64,
    "value": "60"
}

STEP 2: Create NumericInfo Object





...::: Numeric Information :::...
1423517782 : 2015-02-09 16:36:22





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '60', '-r', '2', '-c', '64', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 64,
    "value": "60"
}

STEP 2: Create NumericInfo Object

<NumericInfo_class.NumericInfo object at 0xb723220c>
{
    "__NumericInfo__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom_base": 64,
        "custom_value": [
            60
        ],
        "int_value": 60,
        "raw_base": 10,
        "raw_value": "60"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericInfo_class.NumericInfo object at 0xb72322cc>
{
    "__NumericInfo__": {
        "base10": [
            1,
            2,
            0
        ],
        "base16": [
            7,
            8
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0,
            0
        ],
        "custom_base": 64,
        "custom_value": [
            1,
            56
        ],
        "int_value": 120,
        "raw_base": 10,
        "raw_value": "120"
    }
}

STEP 3: Display Report in Pretty Format


done!





...::: Numeric Information :::...
1423518821 : 2015-02-09 16:53:41





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '60', '-r', '2', '-c', '64', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 64,
    "value": "60"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb71d92ac>
{
    "__NumericObject__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom_base": 64,
        "custom_value": [
            60
        ],
        "int_value": 60,
        "raw_base": 10,
        "raw_value": "60"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb71d936c>
{
    "__NumericObject__": {
        "base10": [
            1,
            2,
            0
        ],
        "base16": [
            7,
            8
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0,
            0
        ],
        "custom_base": 64,
        "custom_value": [
            1,
            56
        ],
        "int_value": 120,
        "raw_base": 10,
        "raw_value": "120"
    }
}

STEP 3: Display Report in Pretty Format


done!





...::: Numeric Information :::...
1423519202 : 2015-02-09 17:00:02





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '60', '-r', '2', '-c', '64', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 64,
    "value": "60"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb7238a6c>
{
    "__NumericObject__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom_base": 64,
        "custom_value": [
            60
        ],
        "int_value": 60,
        "raw_base": 10,
        "raw_value": "60"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb7238b2c>
{
    "__NumericObject__": {
        "base10": [
            1,
            2,
            0
        ],
        "base16": [
            7,
            8
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0,
            0
        ],
        "custom_base": 64,
        "custom_value": [
            1,
            56
        ],
        "int_value": 120,
        "raw_base": 10,
        "raw_value": "120"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 111100
BASE_10 : 60
BASE_16 : 3C




...::: Numeric Information :::...
1423519278 : 2015-02-09 17:01:18





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '60', '-r', '2', '-c', '64', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 64,
    "value": "60"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb726b24c>
{
    "__NumericObject__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom_base": 64,
        "custom_value": [
            60
        ],
        "int_value": 60,
        "raw_base": 10,
        "raw_value": "60"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb726b30c>
{
    "__NumericObject__": {
        "base10": [
            1,
            2,
            0
        ],
        "base16": [
            7,
            8
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0,
            0
        ],
        "custom_base": 64,
        "custom_value": [
            1,
            56
        ],
        "int_value": 120,
        "raw_base": 10,
        "raw_value": "120"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 111100
BASE_10 : 60
BASE_16 : 3C
BASE_XX : 
Shifted number
BASE_2  : 1111000
BASE_10 : 120
BASE_16 : 78
BASE_XX : 

done!





...::: Numeric Information :::...
1423519347 : 2015-02-09 17:02:27





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '60', '-r', '2', '-c', '64', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 64,
    "value": "60"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb726524c>
{
    "__NumericObject__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom_base": 64,
        "custom_value": [
            60
        ],
        "int_value": 60,
        "raw_base": 10,
        "raw_value": "60"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb726530c>
{
    "__NumericObject__": {
        "base10": [
            1,
            2,
            0
        ],
        "base16": [
            7,
            8
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0,
            0
        ],
        "custom_base": 64,
        "custom_value": [
            1,
            56
        ],
        "int_value": 120,
        "raw_base": 10,
        "raw_value": "120"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 111100
BASE_10 : 60
BASE_16 : 3C
BASE_XX : 
Shifted number
BASE_2  : 1111000
BASE_10 : 120
BASE_16 : 78
BASE_XX : 

done!





...::: Numeric Information :::...
1423519376 : 2015-02-09 17:02:56





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '60', '-c', '36', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 36,
    "value": "60"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb71a9a2c>
{
    "__NumericObject__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            1,
            24
        ],
        "int_value": 60,
        "raw_base": 10,
        "raw_value": "60"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb71a9aec>
{
    "__NumericObject__": {
        "base10": [
            1,
            2,
            0
        ],
        "base16": [
            7,
            8
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            3,
            12
        ],
        "int_value": 120,
        "raw_base": 10,
        "raw_value": "120"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 111100
BASE_10 : 60
BASE_16 : 3C
BASE_XX : 
Shifted number
BASE_2  : 1111000
BASE_10 : 120
BASE_16 : 78
BASE_XX : 

done!





...::: Numeric Information :::...
1423519396 : 2015-02-09 17:03:16





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '60', '-c', '36', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 36,
    "value": "60"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb726e22c>
{
    "__NumericObject__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            1,
            24
        ],
        "int_value": 60,
        "raw_base": 10,
        "raw_value": "60"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb726e2ec>
{
    "__NumericObject__": {
        "base10": [
            1,
            2,
            0
        ],
        "base16": [
            7,
            8
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            3,
            12
        ],
        "int_value": 120,
        "raw_base": 10,
        "raw_value": "120"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 111100
BASE_10 : 60
BASE_16 : 3C
BASE_XX : 1O
Shifted number
BASE_2  : 1111000
BASE_10 : 120
BASE_16 : 78
BASE_XX : 3C

done!





...::: Numeric Information :::...
1423519448 : 2015-02-09 17:04:08





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '60', '-c', '36', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 36,
    "value": "60"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb718ea2c>
{
    "__NumericObject__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            1,
            24
        ],
        "int_value": 60,
        "raw_base": 10,
        "raw_value": "60"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb718eaec>
{
    "__NumericObject__": {
        "base10": [
            1,
            2,
            0
        ],
        "base16": [
            7,
            8
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            3,
            12
        ],
        "int_value": 120,
        "raw_base": 10,
        "raw_value": "120"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 111100
BASE_10 : 60
BASE_16 : 3C
BASE_XX : 1O

--------------------

Shifted number
BASE_2  : 1111000
BASE_10 : 120
BASE_16 : 78
BASE_XX : 3C

done!





...::: Numeric Information :::...
1423519600 : 2015-02-09 17:06:40





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '60', '-c', '36', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 36,
    "value": "60"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb717822c>
{
    "__NumericObject__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            1,
            24
        ],
        "int_value": 60,
        "raw_base": 10,
        "raw_value": "60"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb71782ec>
{
    "__NumericObject__": {
        "base10": [
            1,
            2,
            0
        ],
        "base16": [
            7,
            8
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            3,
            12
        ],
        "int_value": 120,
        "raw_base": 10,
        "raw_value": "120"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  :  1111 00
BASE_10 :  60
BASE_16 :  3C
BASE_XX :  1O

--------------------

Shifted number
BASE_2  :  1111 000
BASE_10 :  120
BASE_16 :  78
BASE_XX :  3C

done!





...::: Numeric Information :::...
1423519876 : 2015-02-09 17:11:16





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '60', '-c', '36', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 36,
    "value": "60"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb724d22c>
{
    "__NumericObject__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            1,
            24
        ],
        "int_value": 60,
        "raw_base": 10,
        "raw_value": "60"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb724d2ec>
{
    "__NumericObject__": {
        "base10": [
            1,
            2,
            0
        ],
        "base16": [
            7,
            8
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            3,
            12
        ],
        "int_value": 120,
        "raw_base": 10,
        "raw_value": "120"
    }
}

STEP 3: Display Report in Pretty Format

Original number




...::: Numeric Information :::...
1423519899 : 2015-02-09 17:11:39





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '60', '-c', '36', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 36,
    "value": "60"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb71eb22c>
{
    "__NumericObject__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            1,
            24
        ],
        "int_value": 60,
        "raw_base": 10,
        "raw_value": "60"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb71eb2ec>
{
    "__NumericObject__": {
        "base10": [
            1,
            2,
            0
        ],
        "base16": [
            7,
            8
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            3,
            12
        ],
        "int_value": 120,
        "raw_base": 10,
        "raw_value": "120"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 1 1110 0
BASE_10 : 6 0
BASE_16 : 3 C
BASE_XX : 1 O

--------------------

Shifted number
BASE_2  : 1 1110 00
BASE_10 : 1 20
BASE_16 : 7 8
BASE_XX : 3 C

done!





...::: Numeric Information :::...
1423519961 : 2015-02-09 17:12:41





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '60', '-c', '36', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 36,
    "value": "60"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb71da22c>
{
    "__NumericObject__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            1,
            24
        ],
        "int_value": 60,
        "raw_base": 10,
        "raw_value": "60"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb71da2ec>
{
    "__NumericObject__": {
        "base10": [
            1,
            2,
            0
        ],
        "base16": [
            7,
            8
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            3,
            12
        ],
        "int_value": 120,
        "raw_base": 10,
        "raw_value": "120"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 111100
BASE_10 : 60
BASE_16 : 3C
BASE_XX : 1O

--------------------

Shifted number
BASE_2  : 1111000
BASE_10 : 120
BASE_16 : 78
BASE_XX : 3C

done!





...::: Numeric Information :::...
1423519978 : 2015-02-09 17:12:58





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '60', '-c', '36', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 36,
    "value": "60"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb725a22c>
{
    "__NumericObject__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            1,
            24
        ],
        "int_value": 60,
        "raw_base": 10,
        "raw_value": "60"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb725a2ec>
{
    "__NumericObject__": {
        "base10": [
            1,
            2,
            0
        ],
        "base16": [
            7,
            8
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            3,
            12
        ],
        "int_value": 120,
        "raw_base": 10,
        "raw_value": "120"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 11110 0
BASE_10 : 60
BASE_16 : 3C
BASE_XX : 1O

--------------------

Shifted number
BASE_2  : 11110 00
BASE_10 : 120
BASE_16 : 78
BASE_XX : 3C

done!





...::: Numeric Information :::...
1423520050 : 2015-02-09 17:14:10





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '60', '-c', '36', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 36,
    "value": "60"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb71e422c>
{
    "__NumericObject__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            1,
            24
        ],
        "int_value": 60,
        "raw_base": 10,
        "raw_value": "60"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb71e42ec>
{
    "__NumericObject__": {
        "base10": [
            1,
            2,
            0
        ],
        "base16": [
            7,
            8
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            3,
            12
        ],
        "int_value": 120,
        "raw_base": 10,
        "raw_value": "120"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 111100 
BASE_10 : 60
BASE_16 : 3C
BASE_XX : 1O

--------------------

Shifted number
BASE_2  : 1111000 
BASE_10 : 120
BASE_16 : 78
BASE_XX : 3C

done!





...::: Numeric Information :::...
1423520052 : 2015-02-09 17:14:12





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '60', '-c', '36', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 36,
    "value": "60"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb7218a0c>
{
    "__NumericObject__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            1,
            24
        ],
        "int_value": 60,
        "raw_base": 10,
        "raw_value": "60"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb7218acc>
{
    "__NumericObject__": {
        "base10": [
            1,
            2,
            0
        ],
        "base16": [
            7,
            8
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            3,
            12
        ],
        "int_value": 120,
        "raw_base": 10,
        "raw_value": "120"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 111100 
BASE_10 : 60
BASE_16 : 3C
BASE_XX : 1O

--------------------

Shifted number
BASE_2  : 1111000 
BASE_10 : 120
BASE_16 : 78
BASE_XX : 3C

done!





...::: Numeric Information :::...
1423520269 : 2015-02-09 17:17:49





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '60', '-c', '36', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 36,
    "value": "60"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb71eaa0c>
{
    "__NumericObject__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            1,
            24
        ],
        "int_value": 60,
        "raw_base": 10,
        "raw_value": "60"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb71eaacc>
{
    "__NumericObject__": {
        "base10": [
            1,
            2,
            0
        ],
        "base16": [
            7,
            8
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            3,
            12
        ],
        "int_value": 120,
        "raw_base": 10,
        "raw_value": "120"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 111100 
BASE_10 : 60
BASE_16 : 3C
BASE_XX : 1O

--------------------

Shifted number
BASE_2  : 1111000 
BASE_10 : 120
BASE_16 : 78
BASE_XX : 3C

done!





...::: Numeric Information :::...
1423520325 : 2015-02-09 17:18:45





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '60', '-c', '36', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 36,
    "value": "60"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb718922c>
{
    "__NumericObject__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            1,
            24
        ],
        "int_value": 60,
        "raw_base": 10,
        "raw_value": "60"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb71892ec>
{
    "__NumericObject__": {
        "base10": [
            1,
            2,
            0
        ],
        "base16": [
            7,
            8
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            3,
            12
        ],
        "int_value": 120,
        "raw_base": 10,
        "raw_value": "120"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 11110 0
BASE_10 : 60
BASE_16 : 3C
BASE_XX : 1O

--------------------

Shifted number
BASE_2  : 11110 00
BASE_10 : 120
BASE_16 : 78
BASE_XX : 3C

done!





...::: Numeric Information :::...
1423520355 : 2015-02-09 17:19:15





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '60', '-c', '36', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 36,
    "value": "60"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb71ad22c>
{
    "__NumericObject__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            1,
            24
        ],
        "int_value": 60,
        "raw_base": 10,
        "raw_value": "60"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb71ad2ec>
{
    "__NumericObject__": {
        "base10": [
            1,
            2,
            0
        ],
        "base16": [
            7,
            8
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            3,
            12
        ],
        "int_value": 120,
        "raw_base": 10,
        "raw_value": "120"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 1 1110 0
BASE_10 : 6 0
BASE_16 : 3 C
BASE_XX : 1 O

--------------------

Shifted number
BASE_2  : 1 1110 00
BASE_10 : 1 20
BASE_16 : 7 8
BASE_XX : 3 C

done!





...::: Numeric Information :::...
1423520397 : 2015-02-09 17:19:57





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '60', '-c', '36', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 36,
    "value": "60"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb720d22c>
{
    "__NumericObject__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            1,
            24
        ],
        "int_value": 60,
        "raw_base": 10,
        "raw_value": "60"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb720d2ec>
{
    "__NumericObject__": {
        "base10": [
            1,
            2,
            0
        ],
        "base16": [
            7,
            8
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            3,
            12
        ],
        "int_value": 120,
        "raw_base": 10,
        "raw_value": "120"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 1 1110 0
BASE_10 : 60
BASE_16 : 3C
BASE_XX : 1O

--------------------

Shifted number
BASE_2  : 1 1110 00
BASE_10 : 120
BASE_16 : 78
BASE_XX : 3C

done!





...::: Numeric Information :::...
1423520422 : 2015-02-09 17:20:22





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '60', '-c', '36', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 36,
    "value": "60"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb71e622c>
{
    "__NumericObject__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            1,
            24
        ],
        "int_value": 60,
        "raw_base": 10,
        "raw_value": "60"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb71e62ec>
{
    "__NumericObject__": {
        "base10": [
            1,
            2,
            0
        ],
        "base16": [
            7,
            8
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            3,
            12
        ],
        "int_value": 120,
        "raw_base": 10,
        "raw_value": "120"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 1 111 00
BASE_10 : 60
BASE_16 : 3C
BASE_XX : 1O

--------------------

Shifted number
BASE_2  : 1 111 000 
BASE_10 : 120
BASE_16 : 78
BASE_XX : 3C

done!





...::: Numeric Information :::...
1423520444 : 2015-02-09 17:20:44





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '60', '-c', '36', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 36,
    "value": "60"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb71ab22c>
{
    "__NumericObject__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            1,
            24
        ],
        "int_value": 60,
        "raw_base": 10,
        "raw_value": "60"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb71ab2ec>
{
    "__NumericObject__": {
        "base10": [
            1,
            2,
            0
        ],
        "base16": [
            7,
            8
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            3,
            12
        ],
        "int_value": 120,
        "raw_base": 10,
        "raw_value": "120"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 11110 0
BASE_10 : 60
BASE_16 : 3C
BASE_XX : 1O

--------------------

Shifted number
BASE_2  : 11110 00
BASE_10 : 120
BASE_16 : 78
BASE_XX : 3C

done!





...::: Numeric Information :::...
1423520468 : 2015-02-09 17:21:08





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '60', '-c', '36', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 36,
    "value": "60"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb718022c>
{
    "__NumericObject__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            1,
            24
        ],
        "int_value": 60,
        "raw_base": 10,
        "raw_value": "60"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb71802ec>
{
    "__NumericObject__": {
        "base10": [
            1,
            2,
            0
        ],
        "base16": [
            7,
            8
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            3,
            12
        ],
        "int_value": 120,
        "raw_base": 10,
        "raw_value": "120"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 11 110 0 
BASE_10 : 60
BASE_16 : 3C
BASE_XX : 1O

--------------------

Shifted number
BASE_2  : 11 110 0 0
BASE_10 : 120
BASE_16 : 78
BASE_XX : 3C

done!





...::: Numeric Information :::...
1423520482 : 2015-02-09 17:21:22





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '60', '-c', '36', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 36,
    "value": "60"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb71fd22c>
{
    "__NumericObject__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            1,
            24
        ],
        "int_value": 60,
        "raw_base": 10,
        "raw_value": "60"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb71fd2ec>
{
    "__NumericObject__": {
        "base10": [
            1,
            2,
            0
        ],
        "base16": [
            7,
            8
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            3,
            12
        ],
        "int_value": 120,
        "raw_base": 10,
        "raw_value": "120"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 11110 0
BASE_10 : 60
BASE_16 : 3C
BASE_XX : 1O

--------------------

Shifted number
BASE_2  : 11110 00
BASE_10 : 120
BASE_16 : 78
BASE_XX : 3C

done!





...::: Numeric Information :::...
1423520527 : 2015-02-09 17:22:07





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '60', '-c', '36', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 36,
    "value": "60"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb724a22c>
{
    "__NumericObject__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            1,
            24
        ],
        "int_value": 60,
        "raw_base": 10,
        "raw_value": "60"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb724a2ec>
{
    "__NumericObject__": {
        "base10": [
            1,
            2,
            0
        ],
        "base16": [
            7,
            8
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            3,
            12
        ],
        "int_value": 120,
        "raw_base": 10,
        "raw_value": "120"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 1111 00
BASE_10 : 60
BASE_16 : 3C
BASE_XX : 1O

--------------------

Shifted number
BASE_2  : 1111 000
BASE_10 : 120
BASE_16 : 78
BASE_XX : 3C

done!





...::: Numeric Information :::...
1423520555 : 2015-02-09 17:22:35





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '60', '-c', '36', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 36,
    "value": "60"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb722f22c>
{
    "__NumericObject__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            1,
            24
        ],
        "int_value": 60,
        "raw_base": 10,
        "raw_value": "60"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb722f2ec>
{
    "__NumericObject__": {
        "base10": [
            1,
            2,
            0
        ],
        "base16": [
            7,
            8
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            3,
            12
        ],
        "int_value": 120,
        "raw_base": 10,
        "raw_value": "120"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 1111 00
BASE_10 : 60
BASE_16 : 3C
BASE_XX : 1O

--------------------

Shifted number
BASE_2  : 1111 000
BASE_10 : 120
BASE_16 : 78
BASE_XX : 3C

done!





...::: Numeric Information :::...
1423520593 : 2015-02-09 17:23:13





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '60', '-c', '36', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 36,
    "value": "60"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb722e22c>
{
    "__NumericObject__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            1,
            24
        ],
        "int_value": 60,
        "raw_base": 10,
        "raw_value": "60"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb722e2ec>
{
    "__NumericObject__": {
        "base10": [
            1,
            2,
            0
        ],
        "base16": [
            7,
            8
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            3,
            12
        ],
        "int_value": 120,
        "raw_base": 10,
        "raw_value": "120"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 111100
BASE_10 : 60
BASE_16 : 3C
BASE_XX : 1O

--------------------

Shifted number
BASE_2  : 1111000
BASE_10 : 120
BASE_16 : 78
BASE_XX : 3C

done!





...::: Numeric Information :::...
1423520651 : 2015-02-09 17:24:11





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '60', '-c', '36', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 36,
    "value": "60"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb725922c>
{
    "__NumericObject__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            1,
            24
        ],
        "int_value": 60,
        "raw_base": 10,
        "raw_value": "60"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb72592ec>
{
    "__NumericObject__": {
        "base10": [
            1,
            2,
            0
        ],
        "base16": [
            7,
            8
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            3,
            12
        ],
        "int_value": 120,
        "raw_base": 10,
        "raw_value": "120"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 1111 00
BASE_10 : 60
BASE_16 : 3C
BASE_XX : 1O

--------------------

Shifted number
BASE_2  : 1111 000
BASE_10 : 120
BASE_16 : 78
BASE_XX : 3C

done!





...::: Numeric Information :::...
1423520660 : 2015-02-09 17:24:20





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '600', '-c', '36', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 36,
    "value": "600"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb71bea0c>
{
    "__NumericObject__": {
        "base10": [
            6,
            0,
            0
        ],
        "base16": [
            2,
            5,
            8
        ],
        "base2": [
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            16,
            24
        ],
        "int_value": 600,
        "raw_base": 10,
        "raw_value": "600"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb71beb6c>
{
    "__NumericObject__": {
        "base10": [
            1,
            2,
            0,
            0
        ],
        "base16": [
            4,
            11,
            0
        ],
        "base2": [
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            33,
            12
        ],
        "int_value": 1200,
        "raw_base": 10,
        "raw_value": "1200"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 1001 0110 00
BASE_10 : 600
BASE_16 : 258
BASE_XX : GO

--------------------

Shifted number
BASE_2  : 1001 0110 000
BASE_10 : 1200
BASE_16 : 4B0
BASE_XX : XC

done!





...::: Numeric Information :::...
1423520804 : 2015-02-09 17:26:44





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '600', '-c', '36', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 36,
    "value": "600"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb71d522c>
{
    "__NumericObject__": {
        "base10": [
            6,
            0,
            0
        ],
        "base16": [
            2,
            5,
            8
        ],
        "base2": [
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            16,
            24
        ],
        "int_value": 600,
        "raw_base": 10,
        "raw_value": "600"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb71d538c>
{
    "__NumericObject__": {
        "base10": [
            1,
            2,
            0,
            0
        ],
        "base16": [
            4,
            11,
            0
        ],
        "base2": [
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            33,
            12
        ],
        "int_value": 1200,
        "raw_base": 10,
        "raw_value": "1200"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 100 1011 000
BASE_10 : 600
BASE_16 : 258
BASE_XX : GO

--------------------

Shifted number
BASE_2  : 100 1011 0000
BASE_10 : 1200
BASE_16 : 4B0
BASE_XX : XC

done!





...::: Numeric Information :::...
1423520850 : 2015-02-09 17:27:30





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '600', '-c', '36', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 36,
    "value": "600"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb718b22c>
{
    "__NumericObject__": {
        "base10": [
            6,
            0,
            0
        ],
        "base16": [
            2,
            5,
            8
        ],
        "base2": [
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            16,
            24
        ],
        "int_value": 600,
        "raw_base": 10,
        "raw_value": "600"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb718b38c>
{
    "__NumericObject__": {
        "base10": [
            1,
            2,
            0,
            0
        ],
        "base16": [
            4,
            11,
            0
        ],
        "base2": [
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            33,
            12
        ],
        "int_value": 1200,
        "raw_base": 10,
        "raw_value": "1200"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 1001 0110 00
BASE_10 : 600
BASE_16 : 258
BASE_XX : GO

--------------------

Shifted number
BASE_2  : 1001 0110 000
BASE_10 : 1200
BASE_16 : 4B0
BASE_XX : XC

done!





...::: Numeric Information :::...
1423520901 : 2015-02-09 17:28:21





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '600', '-c', '36', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 36,
    "value": "600"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb718422c>
{
    "__NumericObject__": {
        "base10": [
            6,
            0,
            0
        ],
        "base16": [
            2,
            5,
            8
        ],
        "base2": [
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            16,
            24
        ],
        "int_value": 600,
        "raw_base": 10,
        "raw_value": "600"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb718438c>
{
    "__NumericObject__": {
        "base10": [
            1,
            2,
            0,
            0
        ],
        "base16": [
            4,
            11,
            0
        ],
        "base2": [
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            33,
            12
        ],
        "int_value": 1200,
        "raw_base": 10,
        "raw_value": "1200"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 100 1011 000
BASE_10 : 600
BASE_16 : 258
BASE_XX : GO

--------------------

Shifted number
BASE_2  : 100 1011 0000
BASE_10 : 1200
BASE_16 : 4B0
BASE_XX : XC

done!





...::: Numeric Information :::...
1423521019 : 2015-02-09 17:30:19





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '600', '-c', '36', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 36,
    "value": "600"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb7206a0c>
{
    "__NumericObject__": {
        "base10": [
            6,
            0,
            0
        ],
        "base16": [
            2,
            5,
            8
        ],
        "base2": [
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            16,
            24
        ],
        "int_value": 600,
        "raw_base": 10,
        "raw_value": "600"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb7206b6c>
{
    "__NumericObject__": {
        "base10": [
            1,
            2,
            0,
            0
        ],
        "base16": [
            4,
            11,
            0
        ],
        "base2": [
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            33,
            12
        ],
        "int_value": 1200,
        "raw_base": 10,
        "raw_value": "1200"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 100 1011 000
BASE_10 : 600
BASE_16 : 258
BASE_XX : GO

--------------------

Shifted number
BASE_2  : 100 1011 0000
BASE_10 : 1200
BASE_16 : 4B0
BASE_XX : XC

done!





...::: Numeric Information :::...
1423521290 : 2015-02-09 17:34:50





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '600', '-c', '36', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 36,
    "value": "600"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb71e422c>
{
    "__NumericObject__": {
        "base10": [
            6,
            0,
            0
        ],
        "base16": [
            2,
            5,
            8
        ],
        "base2": [
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            16,
            24
        ],
        "int_value": 600,
        "raw_base": 10,
        "raw_value": "600"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb71e438c>
{
    "__NumericObject__": {
        "base10": [
            1,
            2,
            0,
            0
        ],
        "base16": [
            4,
            11,
            0
        ],
        "base2": [
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            33,
            12
        ],
        "int_value": 1200,
        "raw_base": 10,
        "raw_value": "1200"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 1 0010 11000
BASE_10 : 600
BASE_16 : 258
BASE_XX : GO

--------------------

Shifted number
BASE_2  : 10 0101 10000
BASE_10 : 1200
BASE_16 : 4B0
BASE_XX : XC

done!





...::: Numeric Information :::...
1423521322 : 2015-02-09 17:35:22





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '600', '-c', '36', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 36,
    "value": "600"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb724822c>
{
    "__NumericObject__": {
        "base10": [
            6,
            0,
            0
        ],
        "base16": [
            2,
            5,
            8
        ],
        "base2": [
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            16,
            24
        ],
        "int_value": 600,
        "raw_base": 10,
        "raw_value": "600"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb724838c>
{
    "__NumericObject__": {
        "base10": [
            1,
            2,
            0,
            0
        ],
        "base16": [
            4,
            11,
            0
        ],
        "base2": [
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            33,
            12
        ],
        "int_value": 1200,
        "raw_base": 10,
        "raw_value": "1200"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 1 0010 11000
BASE_10 : 600
BASE_16 : 258
BASE_XX : GO

--------------------

Shifted number
BASE_2  : 10 0101 10000
BASE_10 : 1200
BASE_16 : 4B0
BASE_XX : XC

done!





...::: Numeric Information :::...
1423521351 : 2015-02-09 17:35:51





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '600', '-c', '36', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 36,
    "value": "600"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb71fc22c>
{
    "__NumericObject__": {
        "base10": [
            6,
            0,
            0
        ],
        "base16": [
            2,
            5,
            8
        ],
        "base2": [
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            16,
            24
        ],
        "int_value": 600,
        "raw_base": 10,
        "raw_value": "600"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb71fc38c>
{
    "__NumericObject__": {
        "base10": [
            1,
            2,
            0,
            0
        ],
        "base16": [
            4,
            11,
            0
        ],
        "base2": [
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            33,
            12
        ],
        "int_value": 1200,
        "raw_base": 10,
        "raw_value": "1200"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 100 1011 000
BASE_10 : 600
BASE_16 : 258
BASE_XX : GO

--------------------

Shifted number
BASE_2  :  1001 0110 000
BASE_10 : 1200
BASE_16 : 4B0
BASE_XX : XC

done!





...::: Numeric Information :::...
1423521367 : 2015-02-09 17:36:07





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '600', '-c', '36', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 36,
    "value": "600"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb724422c>
{
    "__NumericObject__": {
        "base10": [
            6,
            0,
            0
        ],
        "base16": [
            2,
            5,
            8
        ],
        "base2": [
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            16,
            24
        ],
        "int_value": 600,
        "raw_base": 10,
        "raw_value": "600"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb724438c>
{
    "__NumericObject__": {
        "base10": [
            1,
            2,
            0,
            0
        ],
        "base16": [
            4,
            11,
            0
        ],
        "base2": [
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            33,
            12
        ],
        "int_value": 1200,
        "raw_base": 10,
        "raw_value": "1200"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 10 0101 1000
BASE_10 : 600
BASE_16 : 258
BASE_XX : GO

--------------------

Shifted number
BASE_2  : 100 1011 0000
BASE_10 : 1200
BASE_16 : 4B0
BASE_XX : XC

done!





...::: Numeric Information :::...
1423521416 : 2015-02-09 17:36:56





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '600', '-c', '36', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 36,
    "value": "600"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb71f322c>
{
    "__NumericObject__": {
        "base10": [
            6,
            0,
            0
        ],
        "base16": [
            2,
            5,
            8
        ],
        "base2": [
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            16,
            24
        ],
        "int_value": 600,
        "raw_base": 10,
        "raw_value": "600"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb71f338c>
{
    "__NumericObject__": {
        "base10": [
            1,
            2,
            0,
            0
        ],
        "base16": [
            4,
            11,
            0
        ],
        "base2": [
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            33,
            12
        ],
        "int_value": 1200,
        "raw_base": 10,
        "raw_value": "1200"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 10 0101 1000
BASE_10 : 600
BASE_16 : 258
BASE_XX : GO

--------------------

Shifted number
BASE_2  : 100 1011 0000
BASE_10 : 1200
BASE_16 : 4B0
BASE_XX : XC

done!





...::: Numeric Information :::...
1423521521 : 2015-02-09 17:38:41





STEP 1: Get Arguments

{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 36,
    "value": "600"
}

STEP 2: Create NumericObject Object


STEP 2.5: Detected bitshift request. Performing shift


STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 10 0101 1000
BASE_10 : 600
BASE_16 : 258
BASE_XX : GO

--------------------

Shifted number
BASE_2  : 100 1011 0000
BASE_10 : 1200
BASE_16 : 4B0
BASE_XX : XC

done!





...::: Numeric Information :::...
1423521564 : 2015-02-09 17:39:24





STEP 1: Get Arguments


STEP 2: Create NumericObject Object


STEP 2.5: Detected bitshift request. Performing shift


STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 10 0101 1000
BASE_10 : 600
BASE_16 : 258
BASE_XX : GO

--------------------

Shifted number
BASE_2  : 100 1011 0000
BASE_10 : 1200
BASE_16 : 4B0
BASE_XX : XC

done!





...::: Numeric Information :::...
1423521584 : 2015-02-09 17:39:44





STEP 1: Get Arguments


STEP 2: Create NumericObject Object


STEP 2.5: Detected bitshift request. Performing shift


STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 10 0101 1000
BASE_10 : 600
BASE_16 : 258
BASE_XX : GO

--------------------

Shifted number
BASE_2  : 100 1011 0000
BASE_10 : 1200
BASE_16 : 4B0
BASE_XX : XC

done!





...::: Numeric Information :::...
1423521591 : 2015-02-09 17:39:51




Original number
BASE_2  : 10 0101 1000
BASE_10 : 600
BASE_16 : 258
BASE_XX : GO

--------------------

Shifted number
BASE_2  : 100 1011 0000
BASE_10 : 1200
BASE_16 : 4B0
BASE_XX : XC

done!





...::: Numeric Information :::...
1423521853 : 2015-02-09 17:44:13




Original number
BASE_2  : 10 0101 1000
BASE_10 : 600
BASE_16 : 258
BASE_XX : GO

--------------------

Shifted number
BASE_2  : 100 1011 0000
BASE_10 : 1200
BASE_16 : 4B0
BASE_XX : XC

--------------------

Bitshift Comparison

origin : 10 0101 1000
shifty : 100 1011 0000

done!





...::: Numeric Information :::...
1423522067 : 2015-02-09 17:47:47




Original number
BASE_2  : 10 0101 1000
BASE_10 : 600
BASE_16 : 258
BASE_XX : GO

--------------------

Shifted number
BASE_2  : 100 1011 0000
BASE_10 : 1200
BASE_16 : 4B0
BASE_XX : XC

--------------------

Bitshift Comparison

origin : 10 0101 1000
shifty : 100 1011 0000

done!





...::: Numeric Information :::...
1423522296 : 2015-02-09 17:51:36




Original number
BASE_2  : 10 0101 1000
BASE_10 : 600
BASE_16 : 258
BASE_XX : GO

--------------------

Shifted number
BASE_2  : 100 1011 0000
BASE_10 : 1200
BASE_16 : 4B0
BASE_XX : XC

--------------------

Bitshift Comparison

origin : 10 0101 1000
shifty : 100 1011 0000

done!





...::: Numeric Information :::...
1423522764 : 2015-02-09 17:59:24




Original number
BASE_2  : 10 0101 1000
BASE_10 : 600
BASE_16 : 258
BASE_XX : GO

--------------------





...::: Numeric Information :::...
1423522803 : 2015-02-09 18:00:03




Original number
BASE_2  : 10 0101 1000
BASE_10 : 600
BASE_16 : 258
BASE_XX : GO

--------------------

Shifted number
BASE_2  : 000010 0101 1000
BASE_10 : 1200
BASE_16 : 4B0
BASE_XX : XC

--------------------

Bitshift Comparison

origin : 000010 0101 1000
shifty : 000010 0101 1000

done!





...::: Numeric Information :::...
1423522888 : 2015-02-09 18:01:28




Original number
BASE_2  : 10 0101 1000
BASE_10 : 600
BASE_16 : 258
BASE_XX : GO

--------------------

Shifted number
BASE_2  : 000010 0101 1000
BASE_10 : 1200
BASE_16 : 4B0
BASE_XX : XC

--------------------

Bitshift Comparison

origin : 000010 0101 1000
shifty : 000010 0101 1000

done!





...::: Numeric Information :::...
1423522938 : 2015-02-09 18:02:18




Original number
BASE_2  : 10 0101 1000
BASE_10 : 600
BASE_16 : 258
BASE_XX : GO

--------------------

Shifted number
BASE_2  : 100 1011 0000
BASE_10 : 1200
BASE_16 : 4B0
BASE_XX : XC

--------------------

Bitshift Comparison

origin : 001001011000
shifty : 001001011000

done!





...::: Numeric Information :::...
1423523303 : 2015-02-09 18:08:23




Original number
BASE_2  : 10 0101 1000
BASE_10 : 600
BASE_16 : 258
BASE_XX : GO

--------------------





...::: Numeric Information :::...
1423523331 : 2015-02-09 18:08:51




Original number
BASE_2  : 10 0101 1000
BASE_10 : 600
BASE_16 : 258
BASE_XX : GO

--------------------

Shifted number
BASE_2  : 100 1011 0000
BASE_10 : 1200
BASE_16 : 4B0
BASE_XX : XC

--------------------

Bitshift Comparison

origin : 0010 0101 1000
shifty : 0010  010 1 10 00

done!





...::: Numeric Information :::...
1423523401 : 2015-02-09 18:10:01




Original number
BASE_2  : 10 0101 1000
BASE_10 : 600
BASE_16 : 258
BASE_XX : GO

--------------------

Shifted number
BASE_2  : 100 1011 0000
BASE_10 : 1200
BASE_16 : 4B0
BASE_XX : XC

--------------------

Bitshift Comparison

origin : 0010 0101 1000
shifty : 0010 0101 1000

done!





...::: Numeric Information :::...
1423523430 : 2015-02-09 18:10:30




Original number
BASE_2  : 10 0101 1000
BASE_10 : 600
BASE_16 : 258
BASE_XX : GO

--------------------

Shifted number
BASE_2  : 100 1011 0000
BASE_10 : 1200
BASE_16 : 4B0
BASE_XX : XC

--------------------

Bitshift Comparison

origin : 0010 0101 1000
shifty : 010010110000

done!





...::: Numeric Information :::...
1423523437 : 2015-02-09 18:10:37




Original number
BASE_2  : 10 0101 1000
BASE_10 : 600
BASE_16 : 258
BASE_XX : GO

--------------------

Shifted number
BASE_2  : 100 1011 0000
BASE_10 : 1200
BASE_16 : 4B0
BASE_XX : XC

--------------------

Bitshift Comparison

origin : 0010 0101 1000
shifty : 0100 1011 0000

done!





...::: Numeric Information :::...
1423523584 : 2015-02-09 18:13:04




Original number
BASE_2  : 10 0101 1000
BASE_10 : 600
BASE_16 : 258
BASE_XX : GO

--------------------

Shifted number
BASE_2  : 100 1011 0000
BASE_10 : 1200
BASE_16 : 4B0
BASE_XX : XC

--------------------

Bitshift Comparison

original : 0010 0101 1000
direction:<<
aftermath: 0100 1011 0000

done!





...::: Numeric Information :::...
1423523592 : 2015-02-09 18:13:12




Original number
BASE_2  : 10 0101 1000
BASE_10 : 600
BASE_16 : 258
BASE_XX : GO

--------------------

Shifted number
BASE_2  : 100 1011 0000
BASE_10 : 1200
BASE_16 : 4B0
BASE_XX : XC

--------------------

Bitshift Comparison

original : 0010 0101 1000
direction: <<
aftermath: 0100 1011 0000

done!





...::: Numeric Information :::...
1423525658 : 2015-02-09 18:47:38




Original number
BASE_2  : 10 0101 1000
BASE_10 : 600
BASE_16 : 258
BASE_XX : GO

--------------------

Shifted number
BASE_2  : 100 1011 0000
BASE_10 : 1200
BASE_16 : 4B0
BASE_XX : XC

--------------------

Bitshift Comparison

original : 0010 0101 1000
direction: <<
aftermath: 0100 1011 0000

done!





...::: Numeric Information :::...
1423525663 : 2015-02-09 18:47:43




FATAL: there are not enough arguments given to use this tool
['args captured:', ['get_numeric_info.py']]




...::: Numeric Information :::...
1423525738 : 2015-02-09 18:48:58




FATAL: there are not enough arguments given to use this tool
['args captured:', ['get_numeric_info.py']]




...::: Numeric Information :::...
1423525754 : 2015-02-09 18:49:14




FATAL: there are not enough arguments given to use this tool
['args captured:', ['get_numeric_info.py']]




...::: Numeric Information :::...
1423525763 : 2015-02-09 18:49:23




FATAL: there are not enough arguments given to use this tool
['args captured:', ['get_numeric_info.py']]




...::: Numeric Information :::...
1423525769 : 2015-02-09 18:49:29




FATAL: there are not enough arguments given to use this tool
['args captured:', ['get_numeric_info.py']]




...::: Numeric Information :::...
1423525782 : 2015-02-09 18:49:42




FATAL: there are not enough arguments given to use this tool
['args captured:', ['get_numeric_info.py']]




...::: Numeric Information :::...
1423525793 : 2015-02-09 18:49:53




FATAL: there are not enough arguments given to use this tool
['args captured:', ['get_numeric_info.py']]




...::: Numeric Information :::...
1423525805 : 2015-02-09 18:50:05




FATAL: there are not enough arguments given to use this tool
['args captured:', ['get_numeric_info.py']]




...::: Numeric Information :::...
1423525822 : 2015-02-09 18:50:22




FATAL: there are not enough arguments given to use this tool
['args captured:', ['get_numeric_info.py']]




...::: Numeric Information :::...
1423525831 : 2015-02-09 18:50:31




FATAL: there are not enough arguments given to use this tool
['args captured:', ['get_numeric_info.py']]




...::: Numeric Information :::...
1423525837 : 2015-02-09 18:50:37




FATAL: there are not enough arguments given to use this tool
['args captured:', ['get_numeric_info.py']]




...::: Numeric Information :::...
1423525848 : 2015-02-09 18:50:48




FATAL: there are not enough arguments given to use this tool
['args captured:', ['get_numeric_info.py']]




...::: Numeric Information :::...
1423525852 : 2015-02-09 18:50:52




FATAL: there are not enough arguments given to use this tool
['args captured:', ['get_numeric_info.py']]




...::: Numeric Information :::...
1423525864 : 2015-02-09 18:51:04




FATAL: there are not enough arguments given to use this tool
['args captured:', ['get_numeric_info.py']]




...::: Numeric Information :::...
1423525879 : 2015-02-09 18:51:19




FATAL: there are not enough arguments given to use this tool
['args captured:', ['get_numeric_info.py']]




...::: Numeric Information :::...
1423525928 : 2015-02-09 18:52:08




Original number




...::: Numeric Information :::...
1423525979 : 2015-02-09 18:52:59




Original number
BASE_2  : 11 1100
BASE_10 : 60
BASE_16 : 3C




...::: Numeric Information :::...
1423526001 : 2015-02-09 18:53:21





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '60']
Action Data:
{
    "base": 10,
    "custom_base": 0,
    "value": "60"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb723eaac>
{
    "__NumericObject__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": 0,
        "int_value": 60,
        "raw_base": 10,
        "raw_value": "60"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 11 1100
BASE_10 : 60
BASE_16 : 3C




...::: Numeric Information :::...
1423526084 : 2015-02-09 18:54:44





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '60']
Action Data:
{
    "base": 10,
    "custom_base": 0,
    "value": "60"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb726c2ec>
{
    "__NumericObject__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 60,
        "raw_base": 10,
        "raw_value": "60"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 11 1100
BASE_10 : 60
BASE_16 : 3C
BASE_XX : 

--------------------


done!





...::: Numeric Information :::...
1423526114 : 2015-02-09 18:55:14





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '60', '-l', '5']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 5,
    "custom_base": 0,
    "value": "60"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb7199acc>
{
    "__NumericObject__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 60,
        "raw_base": 10,
        "raw_value": "60"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb7199b8c>
{
    "__NumericObject__": {
        "base10": [
            1,
            9,
            2,
            0
        ],
        "base16": [
            7,
            8,
            0
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 1920,
        "raw_base": 10,
        "raw_value": "1920"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 11 1100
BASE_10 : 60
BASE_16 : 3C
BASE_XX : 

--------------------

Shifted number
BASE_2  : 111 1000 0000
BASE_10 : 1920
BASE_16 : 780
BASE_XX : 

--------------------

Bitshift Comparison

original : 0000 0011 1100
direction: <<
aftermath: 0111 1000 0000

done!





...::: Numeric Information :::...
1423526277 : 2015-02-09 18:57:57





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '60', '-l', '5']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 5,
    "custom_base": 0,
    "value": "60"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb720aacc>
{
    "__NumericObject__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 60,
        "raw_base": 10,
        "raw_value": "60"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb720ab8c>
{
    "__NumericObject__": {
        "base10": [
            1,
            9,
            2,
            0
        ],
        "base16": [
            7,
            8,
            0
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 1920,
        "raw_base": 10,
        "raw_value": "1920"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 11 1100
BASE_10 : 60
BASE_16 : 3C
BASE_XX : 

--------------------





...::: Numeric Information :::...
1423526322 : 2015-02-09 18:58:42





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '60', '-l', '5']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 5,
    "custom_base": 0,
    "value": "60"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb721cacc>
{
    "__NumericObject__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 60,
        "raw_base": 10,
        "raw_value": "60"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb721cb8c>
{
    "__NumericObject__": {
        "base10": [
            1,
            9,
            2,
            0
        ],
        "base16": [
            7,
            8,
            0
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 1920,
        "raw_base": 10,
        "raw_value": "1920"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 11 1100
BASE_10 : 60
BASE_16 : 3C
BASE_XX : 

--------------------





...::: Numeric Information :::...
1423526415 : 2015-02-09 19:00:15





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '60', '-l', '5']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 5,
    "custom_base": 0,
    "value": "60"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb715dacc>
{
    "__NumericObject__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 60,
        "raw_base": 10,
        "raw_value": "60"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb715db8c>
{
    "__NumericObject__": {
        "base10": [
            1,
            9,
            2,
            0
        ],
        "base16": [
            7,
            8,
            0
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 1920,
        "raw_base": 10,
        "raw_value": "1920"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 11 1100
BASE_10 : 60
BASE_16 : 3C
BASE_XX : 

--------------------

Shifted number (by 5)
BASE_2  : 111 1000 0000
BASE_10 : 1920
BASE_16 : 780
BASE_XX : 

--------------------

Bitshift Comparison

original : 0000 0011 1100
direction: << 5 <<
aftermath: 0111 1000 0000

done!





...::: Numeric Information :::...
1423526443 : 2015-02-09 19:00:43





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '60', '-l', '5']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 5,
    "custom_base": 0,
    "value": "60"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb7239acc>
{
    "__NumericObject__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 60,
        "raw_base": 10,
        "raw_value": "60"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb7239b8c>
{
    "__NumericObject__": {
        "base10": [
            1,
            9,
            2,
            0
        ],
        "base16": [
            7,
            8,
            0
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 1920,
        "raw_base": 10,
        "raw_value": "1920"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 11 1100
BASE_10 : 60
BASE_16 : 3C
BASE_XX : 

--------------------

Shifted number (by << 5)
BASE_2  : 111 1000 0000
BASE_10 : 1920
BASE_16 : 780
BASE_XX : 

--------------------

Bitshift Comparison

original : 0000 0011 1100
direction: << 5 <<
aftermath: 0111 1000 0000

done!





...::: Numeric Information :::...
1423526481 : 2015-02-09 19:01:21





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '60']
Action Data:
{
    "base": 10,
    "custom_base": 0,
    "value": "60"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb718daac>
{
    "__NumericObject__": {
        "base10": [
            6,
            0
        ],
        "base16": [
            3,
            12
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 60,
        "raw_base": 10,
        "raw_value": "60"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 11 1100
BASE_10 : 60
BASE_16 : 3C
BASE_XX : 

--------------------


done!





...::: Numeric Information :::...
1423526486 : 2015-02-09 19:01:26





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '3000']
Action Data:
{
    "base": 10,
    "custom_base": 0,
    "value": "3000"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb71dbaac>
{
    "__NumericObject__": {
        "base10": [
            3,
            0,
            0,
            0
        ],
        "base16": [
            11,
            11,
            8
        ],
        "base2": [
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 3000,
        "raw_base": 10,
        "raw_value": "3000"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  :  1011 1011 1000
BASE_10 : 3000
BASE_16 : BB8
BASE_XX : 

--------------------


done!





...::: Numeric Information :::...
1423526491 : 2015-02-09 19:01:31





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '30000']
Action Data:
{
    "base": 10,
    "custom_base": 0,
    "value": "30000"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb71d8aac>
{
    "__NumericObject__": {
        "base10": [
            3,
            0,
            0,
            0,
            0
        ],
        "base16": [
            7,
            5,
            3,
            0
        ],
        "base2": [
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 30000,
        "raw_base": 10,
        "raw_value": "30000"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 111 0101 0011 0000
BASE_10 : 30000
BASE_16 : 7530
BASE_XX : 

--------------------


done!





...::: Numeric Information :::...
1423526495 : 2015-02-09 19:01:35





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '300000']
Action Data:
{
    "base": 10,
    "custom_base": 0,
    "value": "300000"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb71bbaac>
{
    "__NumericObject__": {
        "base10": [
            3,
            0,
            0,
            0,
            0,
            0
        ],
        "base16": [
            4,
            9,
            3,
            14,
            0
        ],
        "base2": [
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 300000,
        "raw_base": 10,
        "raw_value": "300000"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 100 1001 0011 1110 0000
BASE_10 : 300000
BASE_16 : 493E0
BASE_XX : 

--------------------


done!





...::: Numeric Information :::...
1423526499 : 2015-02-09 19:01:39





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '3000000']
Action Data:
{
    "base": 10,
    "custom_base": 0,
    "value": "3000000"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb715faac>
{
    "__NumericObject__": {
        "base10": [
            3,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base16": [
            2,
            13,
            12,
            6,
            12,
            0
        ],
        "base2": [
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 3000000,
        "raw_base": 10,
        "raw_value": "3000000"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 10 1101 1100 0110 1100 0000
BASE_10 : 3000000
BASE_16 : 2DC6C0
BASE_XX : 

--------------------


done!





...::: Numeric Information :::...
1423526505 : 2015-02-09 19:01:45





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '30000000']
Action Data:
{
    "base": 10,
    "custom_base": 0,
    "value": "30000000"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb7205a8c>
{
    "__NumericObject__": {
        "base10": [
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base16": [
            1,
            12,
            9,
            12,
            3,
            8,
            0
        ],
        "base2": [
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 30000000,
        "raw_base": 10,
        "raw_value": "30000000"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 1 1100 1001 1100 0011 1000 0000
BASE_10 : 30000000
BASE_16 : 1C9C380
BASE_XX : 

--------------------


done!





...::: Numeric Information :::...
1423526508 : 2015-02-09 19:01:48





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '300000000']
Action Data:
{
    "base": 10,
    "custom_base": 0,
    "value": "300000000"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb71d3a8c>
{
    "__NumericObject__": {
        "base10": [
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base16": [
            1,
            1,
            14,
            1,
            10,
            3,
            0,
            0
        ],
        "base2": [
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 300000000,
        "raw_base": 10,
        "raw_value": "300000000"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 1 0001 1110 0001 1010 0011 0000 0000
BASE_10 : 300000000
BASE_16 : 11E1A300
BASE_XX : 

--------------------


done!





...::: Numeric Information :::...
1423526512 : 2015-02-09 19:01:52





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '700000000']
Action Data:
{
    "base": 10,
    "custom_base": 0,
    "value": "700000000"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb71fca8c>
{
    "__NumericObject__": {
        "base10": [
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base16": [
            2,
            9,
            11,
            9,
            2,
            7,
            0,
            0
        ],
        "base2": [
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 700000000,
        "raw_base": 10,
        "raw_value": "700000000"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 10 1001 1011 1001 0010 0111 0000 0000
BASE_10 : 700000000
BASE_16 : 29B92700
BASE_XX : 

--------------------


done!





...::: Numeric Information :::...
1423526514 : 2015-02-09 19:01:54





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '7000000000']
Action Data:
{
    "base": 10,
    "custom_base": 0,
    "value": "7000000000"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb71f7a8c>
{
    "__NumericObject__": {
        "base10": [
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base16": [
            1,
            10,
            1,
            3,
            11,
            8,
            6,
            0,
            0
        ],
        "base2": [
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 7000000000,
        "raw_base": 10,
        "raw_value": "7000000000"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 1 1010 0001 0011 1011 1000 0110 0000 0000
BASE_10 : 7000000000
BASE_16 : 1A13B8600
BASE_XX : 

--------------------


done!





...::: Numeric Information :::...
1423526517 : 2015-02-09 19:01:57





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '70000000000']
Action Data:
{
    "base": 10,
    "custom_base": 0,
    "value": "70000000000"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb7175a8c>
{
    "__NumericObject__": {
        "base10": [
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base16": [
            1,
            0,
            4,
            12,
            5,
            3,
            3,
            12,
            0,
            0
        ],
        "base2": [
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 70000000000,
        "raw_base": 10,
        "raw_value": "70000000000"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 1 0000 0100 1100 0101 0011 0011 1100 0000 0000
BASE_10 : 70000000000
BASE_16 : 104C533C00
BASE_XX : 

--------------------


done!





...::: Numeric Information :::...
1423526519 : 2015-02-09 19:01:59





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '700000000000']
Action Data:
{
    "base": 10,
    "custom_base": 0,
    "value": "700000000000"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb7208a8c>
{
    "__NumericObject__": {
        "base10": [
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base16": [
            10,
            2,
            15,
            11,
            4,
            0,
            5,
            8,
            0,
            0
        ],
        "base2": [
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 700000000000,
        "raw_base": 10,
        "raw_value": "700000000000"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  :  1010 0010 1111 1011 0100 0000 0101 1000 0000 0000
BASE_10 : 700000000000
BASE_16 : A2FB405800
BASE_XX : 

--------------------


done!





...::: Numeric Information :::...
1423526521 : 2015-02-09 19:02:01





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '7000000000000']
Action Data:
{
    "base": 10,
    "custom_base": 0,
    "value": "7000000000000"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb71c2a8c>
{
    "__NumericObject__": {
        "base10": [
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base16": [
            6,
            5,
            13,
            13,
            0,
            8,
            3,
            7,
            0,
            0,
            0
        ],
        "base2": [
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 7000000000000,
        "raw_base": 10,
        "raw_value": "7000000000000"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 110 0101 1101 1101 0000 1000 0011 0111 0000 0000 0000
BASE_10 : 7000000000000
BASE_16 : 65DD0837000
BASE_XX : 

--------------------


done!





...::: Numeric Information :::...
1423526524 : 2015-02-09 19:02:04





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '70000000000000']
Action Data:
{
    "base": 10,
    "custom_base": 0,
    "value": "70000000000000"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb71bea8c>
{
    "__NumericObject__": {
        "base10": [
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base16": [
            3,
            15,
            10,
            10,
            2,
            5,
            2,
            2,
            6,
            0,
            0,
            0
        ],
        "base2": [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 70000000000000,
        "raw_base": 10,
        "raw_value": "70000000000000"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 11 1111 1010 1010 0010 0101 0010 0010 0110 0000 0000 0000
BASE_10 : 70000000000000
BASE_16 : 3FAA25226000
BASE_XX : 

--------------------


done!





...::: Numeric Information :::...
1423526526 : 2015-02-09 19:02:06





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '700000000000000']
Action Data:
{
    "base": 10,
    "custom_base": 0,
    "value": "700000000000000"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb71daa8c>
{
    "__NumericObject__": {
        "base10": [
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base16": [
            2,
            7,
            12,
            10,
            5,
            7,
            3,
            5,
            7,
            12,
            0,
            0,
            0
        ],
        "base2": [
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 700000000000000,
        "raw_base": 10,
        "raw_value": "700000000000000"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 10 0111 1100 1010 0101 0111 0011 0101 0111 1100 0000 0000 0000
BASE_10 : 700000000000000
BASE_16 : 27CA57357C000
BASE_XX : 

--------------------


done!





...::: Numeric Information :::...
1423526529 : 2015-02-09 19:02:09





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '7000000000000000']
Action Data:
{
    "base": 10,
    "custom_base": 0,
    "value": "7000000000000000"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb71eaa8c>
{
    "__NumericObject__": {
        "base10": [
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base16": [
            1,
            8,
            13,
            14,
            7,
            6,
            8,
            1,
            6,
            13,
            8,
            0,
            0,
            0
        ],
        "base2": [
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 7000000000000000,
        "raw_base": 10,
        "raw_value": "7000000000000000"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 1 1000 1101 1110 0111 0110 1000 0001 0110 1101 1000 0000 0000 0000
BASE_10 : 7000000000000000
BASE_16 : 18DE76816D8000
BASE_XX : 

--------------------


done!





...::: Numeric Information :::...
1423526531 : 2015-02-09 19:02:11





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '70000000000000000']
Action Data:
{
    "base": 10,
    "custom_base": 0,
    "value": "70000000000000000"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb7160a8c>
{
    "__NumericObject__": {
        "base10": [
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base16": [
            15,
            8,
            11,
            0,
            10,
            1,
            0,
            14,
            4,
            7,
            0,
            0,
            0,
            0
        ],
        "base2": [
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 70000000000000000,
        "raw_base": 10,
        "raw_value": "70000000000000000"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  :  1111 1000 1011 0000 1010 0001 0000 1110 0100 0111 0000 0000 0000 0000
BASE_10 : 70000000000000000
BASE_16 : F8B0A10E470000
BASE_XX : 

--------------------


done!





...::: Numeric Information :::...
1423526533 : 2015-02-09 19:02:13





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '70000000000000000000']
Action Data:
{
    "base": 10,
    "custom_base": 0,
    "value": "70000000000000000000"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb71e9a8c>
{
    "__NumericObject__": {
        "base10": [
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base16": [
            3,
            12,
            11,
            7,
            1,
            15,
            5,
            1,
            15,
            12,
            5,
            5,
            8,
            0,
            0,
            0,
            0
        ],
        "base2": [
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 70000000000000000000,
        "raw_base": 10,
        "raw_value": "70000000000000000000"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 11 1100 1011 0111 0001 1111 0101 0001 1111 1100 0101 0101 1000 0000 0000 0000 0000
BASE_10 : 70000000000000000000
BASE_16 : 3CB71F51FC5580000
BASE_XX : 

--------------------


done!





...::: Numeric Information :::...
1423526536 : 2015-02-09 19:02:16





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '70000000000000000000000']
Action Data:
{
    "base": 10,
    "custom_base": 0,
    "value": "70000000000000000000000"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb718ca8c>
{
    "__NumericObject__": {
        "base10": [
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base16": [
            14,
            13,
            2,
            11,
            5,
            2,
            5,
            8,
            4,
            1,
            10,
            13,
            15,
            12,
            0,
            0,
            0,
            0,
            0
        ],
        "base2": [
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 70000000000000000000000,
        "raw_base": 10,
        "raw_value": "70000000000000000000000"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  :  1110 1101 0010 1011 0101 0010 0101 1000 0100 0001 1010 1101 1111 1100 0000 0000 0000 0000 0000
BASE_10 : 70000000000000000000000
BASE_16 : ED2B525841ADFC00000
BASE_XX : 

--------------------


done!





...::: Numeric Information :::...
1423526539 : 2015-02-09 19:02:19





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '70000000000000000000000000']
Action Data:
{
    "base": 10,
    "custom_base": 0,
    "value": "70000000000000000000000000"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb7250a8c>
{
    "__NumericObject__": {
        "base10": [
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base16": [
            3,
            9,
            14,
            7,
            1,
            3,
            9,
            10,
            8,
            12,
            0,
            8,
            15,
            10,
            0,
            6,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base2": [
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 70000000000000000000000000,
        "raw_base": 10,
        "raw_value": "70000000000000000000000000"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 11 1001 1110 0111 0001 0011 1001 1010 1000 1100 0000 1000 1111 1010 0000 0110 0000 0000 0000 0000 0000 0000
BASE_10 : 70000000000000000000000000
BASE_16 : 39E7139A8C08FA06000000
BASE_XX : 

--------------------


done!





...::: Numeric Information :::...
1423526543 : 2015-02-09 19:02:23





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '70000000000000000000000000000']
Action Data:
{
    "base": 10,
    "custom_base": 0,
    "value": "70000000000000000000000000000"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb71a5a8c>
{
    "__NumericObject__": {
        "base10": [
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base16": [
            14,
            2,
            2,
            14,
            10,
            4,
            9,
            3,
            11,
            3,
            0,
            3,
            1,
            0,
            10,
            7,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base2": [
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 70000000000000000000000000000,
        "raw_base": 10,
        "raw_value": "70000000000000000000000000000"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  :  1110 0010 0010 1110 1010 0100 1001 0011 1011 0011 0000 0011 0001 0000 1010 0111 0111 0000 0000 0000 0000 0000 0000 0000
BASE_10 : 70000000000000000000000000000
BASE_16 : E22EA493B30310A770000000
BASE_XX : 

--------------------


done!





...::: Numeric Information :::...
1423526551 : 2015-02-09 19:02:31





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '70000000000000000000000000000000']
Action Data:
{
    "base": 10,
    "custom_base": 0,
    "value": "70000000000000000000000000000000"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb71c8a8c>
{
    "__NumericObject__": {
        "base10": [
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base16": [
            3,
            7,
            3,
            8,
            6,
            3,
            2,
            14,
            0,
            15,
            3,
            4,
            3,
            15,
            9,
            0,
            14,
            0,
            13,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base2": [
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 70000000000000000000000000000000,
        "raw_base": 10,
        "raw_value": "70000000000000000000000000000000"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 11 0111 0011 1000 0110 0011 0010 1110 0000 1111 0011 0100 0011 1111 1001 0000 1110 0000 1101 1000 0000 0000 0000 0000 0000 0000 0000
BASE_10 : 70000000000000000000000000000000
BASE_16 : 3738632E0F343F90E0D80000000
BASE_XX : 

--------------------


done!





...::: Numeric Information :::...
1423526554 : 2015-02-09 19:02:34





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '70000000000000000000000000000000000']
Action Data:
{
    "base": 10,
    "custom_base": 0,
    "value": "70000000000000000000000000000000000"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb718da8c>
{
    "__NumericObject__": {
        "base10": [
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base16": [
            13,
            7,
            11,
            4,
            4,
            3,
            6,
            11,
            14,
            11,
            6,
            4,
            1,
            8,
            4,
            13,
            14,
            14,
            4,
            11,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base2": [
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 70000000000000000000000000000000000,
        "raw_base": 10,
        "raw_value": "70000000000000000000000000000000000"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  :  1101 0111 1011 0100 0100 0011 0110 1011 1110 1011 0110 0100 0001 1000 0100 1101 1110 1110 0100 1011 1100 0000 0000 0000 0000 0000 0000 0000 0000
BASE_10 : 70000000000000000000000000000000000
BASE_16 : D7B4436BEB64184DEE4BC00000000
BASE_XX : 

--------------------


done!





...::: Numeric Information :::...
1423526558 : 2015-02-09 19:02:38





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '70000000000000000000000000000000000000']
Action Data:
{
    "base": 10,
    "custom_base": 0,
    "value": "70000000000000000000000000000000000000"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb7174a8c>
{
    "__NumericObject__": {
        "base10": [
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base16": [
            3,
            4,
            10,
            9,
            8,
            2,
            7,
            5,
            13,
            8,
            15,
            7,
            14,
            15,
            14,
            15,
            0,
            6,
            10,
            13,
            7,
            14,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base2": [
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 70000000000000000000000000000000000000,
        "raw_base": 10,
        "raw_value": "70000000000000000000000000000000000000"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 11 0100 1010 1001 1000 0010 0111 0101 1101 1000 1111 0111 1110 1111 1110 1111 0000 0110 1010 1101 0111 1110 0110 0000 0000 0000 0000 0000 0000 0000 0000 0000
BASE_10 : 70000000000000000000000000000000000000
BASE_16 : 34A98275D8F7EFEF06AD7E6000000000
BASE_XX : 

--------------------


done!





...::: Numeric Information :::...
1423526561 : 2015-02-09 19:02:41





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '70000000000000000000000000000000000000000']
Action Data:
{
    "base": 10,
    "custom_base": 0,
    "value": "70000000000000000000000000000000000000000"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb7164a8c>
{
    "__NumericObject__": {
        "base10": [
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base16": [
            12,
            13,
            11,
            6,
            2,
            5,
            9,
            12,
            5,
            7,
            8,
            8,
            8,
            1,
            3,
            13,
            11,
            2,
            1,
            5,
            11,
            5,
            10,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base2": [
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 70000000000000000000000000000000000000000,
        "raw_base": 10,
        "raw_value": "70000000000000000000000000000000000000000"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  :  1100 1101 1011 0110 0010 0101 1001 1100 0101 0111 1000 1000 1000 0001 0011 1101 1011 0010 0001 0101 1011 0101 1010 0111 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
BASE_10 : 70000000000000000000000000000000000000000
BASE_16 : CDB6259C5788813DB215B5A70000000000
BASE_XX : 

--------------------


done!





...::: Numeric Information :::...
1423526564 : 2015-02-09 19:02:44





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '70000000000000000000000000000000000000000000']
Action Data:
{
    "base": 10,
    "custom_base": 0,
    "value": "70000000000000000000000000000000000000000000"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb71b0a8c>
{
    "__NumericObject__": {
        "base10": [
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base16": [
            3,
            2,
            3,
            8,
            15,
            8,
            2,
            14,
            10,
            11,
            5,
            14,
            13,
            3,
            8,
            13,
            8,
            15,
            15,
            10,
            4,
            12,
            13,
            9,
            4,
            5,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base2": [
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 70000000000000000000000000000000000000000000,
        "raw_base": 10,
        "raw_value": "70000000000000000000000000000000000000000000"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 11 0010 0011 1000 1111 1000 0010 1110 1010 1011 0101 1110 1101 0011 1000 1101 1000 1111 1111 1010 0100 1100 1101 1001 0100 0101 1000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
BASE_10 : 70000000000000000000000000000000000000000000
BASE_16 : 3238F82EAB5ED38D8FFA4CD94580000000000
BASE_XX : 

--------------------


done!





...::: Numeric Information :::...
1423526566 : 2015-02-09 19:02:46





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '70000000000000000000000000000000000000000000000']
Action Data:
{
    "base": 10,
    "custom_base": 0,
    "value": "70000000000000000000000000000000000000000000000"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb7223a8c>
{
    "__NumericObject__": {
        "base10": [
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base16": [
            12,
            4,
            2,
            14,
            8,
            9,
            7,
            6,
            4,
            13,
            6,
            10,
            6,
            10,
            6,
            0,
            15,
            10,
            6,
            9,
            11,
            12,
            3,
            0,
            11,
            7,
            7,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base2": [
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 70000000000000000000000000000000000000000000000,
        "raw_base": 10,
        "raw_value": "70000000000000000000000000000000000000000000000"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  :  1100 0100 0010 1110 1000 1001 0111 0110 0100 1101 0110 1010 0110 1010 0110 0000 1111 1010 0110 1001 1011 1100 0011 0000 1011 0111 0111 1100 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
BASE_10 : 70000000000000000000000000000000000000000000000
BASE_16 : C42E89764D6A6A60FA69BC30B77C00000000000
BASE_XX : 

--------------------


done!





...::: Numeric Information :::...
1423526568 : 2015-02-09 19:02:48





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '70000000000000000000000000000000000000000000000000']
Action Data:
{
    "base": 10,
    "custom_base": 0,
    "value": "70000000000000000000000000000000000000000000000000"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb7205a8c>
{
    "__NumericObject__": {
        "base10": [
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base16": [
            2,
            15,
            14,
            5,
            5,
            12,
            8,
            15,
            6,
            1,
            14,
            6,
            7,
            10,
            15,
            8,
            10,
            13,
            2,
            2,
            13,
            0,
            7,
            1,
            14,
            4,
            12,
            11,
            12,
            6,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base2": [
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 70000000000000000000000000000000000000000000000000,
        "raw_base": 10,
        "raw_value": "70000000000000000000000000000000000000000000000000"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 10 1111 1110 0101 0101 1100 1000 1111 0110 0001 1110 0110 0111 1010 1111 1000 1010 1101 0010 0010 1101 0000 0111 0001 1110 0100 1100 1011 1100 0110 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
BASE_10 : 70000000000000000000000000000000000000000000000000
BASE_16 : 2FE55C8F61E67AF8AD22D071E4CBC6000000000000
BASE_XX : 

--------------------


done!





...::: Numeric Information :::...
1423526570 : 2015-02-09 19:02:50





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '70000000000000000000000000000000000000000000000000000']
Action Data:
{
    "base": 10,
    "custom_base": 0,
    "value": "70000000000000000000000000000000000000000000000000000"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb71d7a8c>
{
    "__NumericObject__": {
        "base10": [
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base16": [
            11,
            11,
            1,
            7,
            15,
            1,
            9,
            0,
            1,
            6,
            6,
            12,
            5,
            0,
            5,
            11,
            6,
            4,
            4,
            15,
            15,
            14,
            3,
            12,
            14,
            5,
            11,
            11,
            15,
            13,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base2": [
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 70000000000000000000000000000000000000000000000000000,
        "raw_base": 10,
        "raw_value": "70000000000000000000000000000000000000000000000000000"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  :  1011 1011 0001 0111 1111 0001 1001 0000 0001 0110 0110 1100 0101 0000 0101 1011 0110 0100 0100 1111 1111 1110 0011 1100 1110 0101 1011 1011 1111 1101 0111 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
BASE_10 : 70000000000000000000000000000000000000000000000000000
BASE_16 : BB17F190166C505B644FFE3CE5BBFD70000000000000
BASE_XX : 

--------------------


done!





...::: Numeric Information :::...
1423526574 : 2015-02-09 19:02:54





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '70000000000000000000000000000000000000000000000000000000']
Action Data:
{
    "base": 10,
    "custom_base": 0,
    "value": "70000000000000000000000000000000000000000000000000000000"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb71b2a8c>
{
    "__NumericObject__": {
        "base10": [
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base16": [
            2,
            13,
            10,
            13,
            5,
            8,
            7,
            9,
            10,
            13,
            7,
            9,
            7,
            1,
            9,
            14,
            4,
            15,
            15,
            13,
            8,
            7,
            9,
            1,
            13,
            14,
            1,
            6,
            6,
            5,
            5,
            15,
            13,
            8,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base2": [
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 70000000000000000000000000000000000000000000000000000000,
        "raw_base": 10,
        "raw_value": "70000000000000000000000000000000000000000000000000000000"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 10 1101 1010 1101 0101 1000 0111 1001 1010 1101 0111 1001 0111 0001 1001 1110 0100 1111 1111 1101 1000 0111 1001 0001 1101 1110 0001 0110 0110 0101 0101 1111 1101 1000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
BASE_10 : 70000000000000000000000000000000000000000000000000000000
BASE_16 : 2DAD5879AD79719E4FFD8791DE16655FD80000000000000
BASE_XX : 

--------------------


done!





...::: Numeric Information :::...
1423526576 : 2015-02-09 19:02:56





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '70000000000000000000000000000000000000000000000000000000000']
Action Data:
{
    "base": 10,
    "custom_base": 0,
    "value": "70000000000000000000000000000000000000000000000000000000000"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb71b4a8c>
{
    "__NumericObject__": {
        "base10": [
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base16": [
            11,
            2,
            6,
            13,
            2,
            1,
            9,
            11,
            4,
            13,
            10,
            2,
            6,
            3,
            13,
            2,
            6,
            8,
            7,
            6,
            5,
            9,
            9,
            1,
            12,
            11,
            8,
            7,
            7,
            11,
            15,
            14,
            6,
            3,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base2": [
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 70000000000000000000000000000000000000000000000000000000000,
        "raw_base": 10,
        "raw_value": "70000000000000000000000000000000000000000000000000000000000"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  :  1011 0010 0110 1101 0010 0001 1001 1011 0100 1101 1010 0010 0110 0011 1101 0010 0110 1000 0111 0110 0101 1001 1001 0001 1100 1011 1000 0111 0111 1011 1111 1110 0110 0011 1100 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
BASE_10 : 70000000000000000000000000000000000000000000000000000000000
BASE_16 : B26D219B4DA263D268765991CB877BFE63C00000000000000
BASE_XX : 

--------------------


done!





...::: Numeric Information :::...
1423526581 : 2015-02-09 19:03:01





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '70000000000000000000000000000000000000000000000000000000000000000000000']
Action Data:
{
    "base": 10,
    "custom_base": 0,
    "value": "70000000000000000000000000000000000000000000000000000000000000000000000"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb71e3a8c>
{
    "__NumericObject__": {
        "base10": [
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base16": [
            10,
            2,
            4,
            7,
            1,
            11,
            14,
            0,
            1,
            0,
            7,
            2,
            10,
            7,
            10,
            15,
            13,
            13,
            6,
            6,
            9,
            13,
            10,
            9,
            1,
            12,
            4,
            15,
            14,
            5,
            13,
            12,
            4,
            4,
            7,
            3,
            5,
            1,
            3,
            0,
            15,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base2": [
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 70000000000000000000000000000000000000000000000000000000000000000000000,
        "raw_base": 10,
        "raw_value": "70000000000000000000000000000000000000000000000000000000000000000000000"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  :  1010 0010 0100 0111 0001 1011 1110 0000 0001 0000 0111 0010 1010 0111 1010 1111 1101 1101 0110 0110 1001 1101 1010 1001 0001 1100 0100 1111 1110 0101 1101 1100 0100 0100 0111 0011 0101 0001 0011 0000 1111 1100 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
BASE_10 : 70000000000000000000000000000000000000000000000000000000000000000000000
BASE_16 : A2471BE01072A7AFDD669DA91C4FE5DC44735130FC00000000000000000
BASE_XX : 

--------------------


done!





...::: Numeric Information :::...
1423526586 : 2015-02-09 19:03:06





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '70000000000000000000000000000000000000000000000000000000000000000000000000000000000']
Action Data:
{
    "base": 10,
    "custom_base": 0,
    "value": "70000000000000000000000000000000000000000000000000000000000000000000000000000000000"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb722ea8c>
{
    "__NumericObject__": {
        "base10": [
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base16": [
            9,
            3,
            9,
            7,
            3,
            12,
            12,
            8,
            1,
            13,
            13,
            14,
            10,
            15,
            8,
            5,
            2,
            11,
            8,
            7,
            2,
            12,
            8,
            12,
            12,
            11,
            11,
            11,
            11,
            4,
            4,
            11,
            3,
            12,
            9,
            6,
            8,
            6,
            15,
            6,
            3,
            11,
            7,
            10,
            5,
            5,
            7,
            11,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base2": [
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 70000000000000000000000000000000000000000000000000000000000000000000000000000000000,
        "raw_base": 10,
        "raw_value": "70000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  :  1001 0011 1001 0111 0011 1100 1100 1000 0001 1101 1101 1110 1010 1111 1000 0101 0010 1011 1000 0111 0010 1100 1000 1100 1100 1011 1011 1011 1011 0100 0100 1011 0011 1100 1001 0110 1000 0110 1111 0110 0011 1011 0111 1010 0101 0101 0111 1011 1100 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
BASE_10 : 70000000000000000000000000000000000000000000000000000000000000000000000000000000000
BASE_16 : 93973CC81DDEAF852B872C8CCBBBB44B3C9686F63B7A557BC00000000000000000000
BASE_XX : 

--------------------


done!





...::: Numeric Information :::...
1423526614 : 2015-02-09 19:03:34





STEP 1: Get Arguments


STEP 2: Create NumericObject Object


STEP 3: Display Report in Pretty Format

Original number
BASE_2  :  1000 0110 0011 1011 1010 0111 0111 1101 0110 0100 0110 1011 0101 0011 0011 1100 0110 1110 1100 0110 0101 1001 1011 0001 0101 0101 0110 0100 0101 1010 1111 0010 0011 0100 0010 0110 0101 1001 1011 0111 1011 1000 0011 0101 0100 0010 1000 0000 1000 0001 0011 1001 0001 1010 0111 1100 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
BASE_10 : 70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
BASE_16 : 863BA77D646B533C6EC659B155645AF2342659B7B835428081391A7C00000000000000000000000
BASE_XX : 

--------------------


done!





...::: Numeric Information :::...
1423526625 : 2015-02-09 19:03:45





STEP 1: Get Arguments


STEP 2: Create NumericObject Object


STEP 3: Display Report in Pretty Format

Original number
BASE_2  :  1000 0110 0011 1011 1010 0111 0111 1101 0110 0100 0110 1011 0101 0011 0011 1100 0110 1110 1100 0110 0101 1001 1011 0001 0101 0101 0110 0100 0101 1010 1111 0010 0011 0100 0010 0110 0101 1001 1011 0111 1011 1000 0011 0101 0100 0010 1000 0000 1000 0001 0011 1001 0001 1010 0111 1100 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
BASE_10 : 70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
BASE_16 : 863BA77D646B533C6EC659B155645AF2342659B7B835428081391A7C00000000000000000000000
BASE_XX : TAZTTAXQR9VWFUIIKEH3XLIX35464NR2EHUTVKBS9TZY3H0TZ0X4U0M713J0G

--------------------


done!





...::: Numeric Information :::...
1423526640 : 2015-02-09 19:04:00





STEP 1: Get Arguments


STEP 2: Create NumericObject Object


STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 110 1111 0000 1000 1111 0010 1101 0110 0000 0000 1110 1001 1011 0010 1000 1011 1000 0010 1010 1111 0010 0010 0110 0100 1110 0111 0110 0111 1110 1100 0111 1011 1111 0000 1000 0000 0110 1000 0111 1101 1011 1101 0101 1011 0011 1010 0011 1011 1011 1101 0000 1111 1001 0100 0100 1001 1011 1110 0111 1010 0101 1000 0000 0101 0011 1110 0111 0011 1111 1100 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
BASE_10 : 70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
BASE_16 : 6F08F2D600E9B28B82AF2264E767EC7BF080687DBD5B3A3BBD0F9449BE7A58053E73FC00000000000000000000000000000
BASE_XX : 3OK4YOZHS1QJ6DIQO1FPXC0FY32VM211OB8QVUT5OOH5ALPDY1CVFAGLSH8S760JMXK1EXYOWS9OG

--------------------


done!





...::: Numeric Information :::...
1423526680 : 2015-02-09 19:04:40





STEP 1: Get Arguments


STEP 2: Create NumericObject Object


STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 100 1111 1010 1001 1110 0110 1000 0011 0000 0111 1111 0100 1010 1010 0101 1010 1000 0110 0100 0110 0001 0010 1010 1110 1110 0101 1001 0001 1101 1010 0000 0011 1111 1111 1000 1000 1100 1010 1100 1010 0110 1111 1011 0011 0011 0100 1101 1011 1001 0001 1000 1110 0111 0001 0000 0101 1100 1110 1000 1100 1000 0111 0110 0001 1000 1011 1010 0100 1010 1010 0000 0001 0110 1010 0001 1010 0011 0010 0011 1110 1111 0011 1011 0110 1011 0010 1110 0010 0101 0110 0011 1110 1000 0111 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
BASE_10 : 70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
BASE_16 : 4FA9E68307F4AA5A864612AEE591DA03FF88CACA6FB334DB918E7105CE8C87618BA4AA016A1A323EF3B6B2E2563E870000000000000000000000000000000000000000
BASE_XX : 3IJLJY0CFP3U5R9QWWIHYVEGAXLN12NZS61WWFQ6T5XYAP6H4KXL5CJJ9JHCDBWAMRM1OCYYVXRF0UV2CTQ6FDOD2OK39AYPBE77OKCG

--------------------


done!





...::: Numeric Information :::...
1423526702 : 2015-02-09 19:05:02





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000', '-c', '36']
Action Data:
{
    "base": 10,
    "custom_base": 36,
    "value": "70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb7253acc>
{
    "__NumericObject__": {
        "base10": [
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base16": [
            4,
            15,
            10,
            9,
            14,
            6,
            8,
            3,
            0,
            7,
            15,
            4,
            10,
            10,
            5,
            10,
            8,
            6,
            4,
            6,
            1,
            2,
            10,
            14,
            14,
            5,
            9,
            1,
            13,
            10,
            0,
            3,
            15,
            15,
            8,
            8,
            12,
            10,
            12,
            10,
            6,
            15,
            11,
            3,
            3,
            4,
            13,
            11,
            9,
            1,
            8,
            14,
            7,
            1,
            0,
            5,
            12,
            14,
            8,
            12,
            8,
            7,
            6,
            1,
            8,
            11,
            10,
            4,
            10,
            10,
            0,
            1,
            6,
            10,
            1,
            10,
            3,
            2,
            3,
            14,
            15,
            3,
            11,
            6,
            11,
            2,
            14,
            2,
            5,
            6,
            3,
            14,
            8,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base2": [
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            3,
            18,
            19,
            21,
            19,
            34,
            0,
            12,
            15,
            25,
            3,
            30,
            5,
            27,
            9,
            26,
            32,
            32,
            18,
            17,
            34,
            31,
            14,
            16,
            10,
            33,
            21,
            23,
            1,
            2,
            23,
            35,
            28,
            6,
            1,
            32,
            32,
            15,
            26,
            6,
            29,
            5,
            33,
            34,
            10,
            25,
            6,
            17,
            4,
            20,
            33,
            21,
            5,
            12,
            19,
            19,
            9,
            19,
            17,
            12,
            13,
            11,
            32,
            10,
            22,
            27,
            22,
            1,
            24,
            12,
            34,
            34,
            31,
            33,
            27,
            15,
            0,
            30,
            31,
            2,
            12,
            29,
            26,
            6,
            15,
            13,
            24,
            13,
            2,
            24,
            20,
            3,
            9,
            10,
            34,
            25,
            11,
            14,
            7,
            7,
            24,
            20,
            12,
            16
        ],
        "int_value": 70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
        "raw_base": 10,
        "raw_value": "70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 100 1111 1010 1001 1110 0110 1000 0011 0000 0111 1111 0100 1010 1010 0101 1010 1000 0110 0100 0110 0001 0010 1010 1110 1110 0101 1001 0001 1101 1010 0000 0011 1111 1111 1000 1000 1100 1010 1100 1010 0110 1111 1011 0011 0011 0100 1101 1011 1001 0001 1000 1110 0111 0001 0000 0101 1100 1110 1000 1100 1000 0111 0110 0001 1000 1011 1010 0100 1010 1010 0000 0001 0110 1010 0001 1010 0011 0010 0011 1110 1111 0011 1011 0110 1011 0010 1110 0010 0101 0110 0011 1110 1000 0111 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
BASE_10 : 70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
BASE_16 : 4FA9E68307F4AA5A864612AEE591DA03FF88CACA6FB334DB918E7105CE8C87618BA4AA016A1A323EF3B6B2E2563E870000000000000000000000000000000000000000
BASE_XX : 3IJLJY0CFP3U5R9QWWIHYVEGAXLN12NZS61WWFQ6T5XYAP6H4KXL5CJJ9JHCDBWAMRM1OCYYVXRF0UV2CTQ6FDOD2OK39AYPBE77OKCG

--------------------


done!





...::: Numeric Information :::...
1423526735 : 2015-02-09 19:05:35





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000', '-c', '36']
Action Data:
{
    "base": 10,
    "custom_base": 36,
    "value": "7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb7245acc>
{
    "__NumericObject__": {
        "base10": [
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base16": [
            1,
            6,
            5,
            3,
            9,
            6,
            9,
            9,
            0,
            11,
            1,
            14,
            1,
            13,
            3,
            2,
            1,
            1,
            7,
            5,
            13,
            0,
            6,
            3,
            8,
            7,
            1,
            7,
            11,
            7,
            3,
            6,
            11,
            3,
            15,
            10,
            15,
            13,
            12,
            4,
            10,
            4,
            12,
            7,
            11,
            8,
            11,
            9,
            11,
            12,
            5,
            1,
            1,
            10,
            8,
            7,
            9,
            10,
            7,
            10,
            1,
            5,
            15,
            3,
            15,
            9,
            6,
            4,
            12,
            2,
            11,
            14,
            0,
            10,
            8,
            0,
            8,
            10,
            13,
            15,
            13,
            13,
            4,
            13,
            4,
            3,
            15,
            12,
            2,
            3,
            5,
            7,
            1,
            2,
            6,
            8,
            5,
            0,
            10,
            1,
            2,
            10,
            13,
            2,
            14,
            11,
            12,
            10,
            0,
            11,
            9,
            0,
            12,
            9,
            9,
            0,
            0,
            3,
            3,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base2": [
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            9,
            11,
            20,
            8,
            18,
            23,
            25,
            31,
            9,
            0,
            34,
            14,
            24,
            26,
            31,
            2,
            9,
            21,
            12,
            31,
            12,
            24,
            32,
            32,
            8,
            10,
            0,
            35,
            30,
            28,
            20,
            30,
            10,
            27,
            7,
            0,
            24,
            5,
            14,
            33,
            18,
            30,
            32,
            1,
            10,
            8,
            23,
            15,
            26,
            7,
            6,
            23,
            27,
            9,
            23,
            29,
            31,
            10,
            20,
            13,
            0,
            16,
            9,
            25,
            30,
            25,
            26,
            34,
            0,
            31,
            23,
            27,
            13,
            18,
            4,
            11,
            4,
            12,
            5,
            22,
            24,
            12,
            31,
            0,
            2,
            4,
            15,
            19,
            31,
            18,
            19,
            33,
            28,
            33,
            29,
            28,
            15,
            4,
            3,
            7,
            13,
            30,
            4,
            27,
            34,
            14,
            31,
            14,
            13,
            19,
            2,
            12,
            2,
            26,
            5,
            2,
            16,
            24,
            13,
            30,
            16,
            24,
            1,
            11,
            2,
            33,
            23,
            13,
            2,
            5,
            8,
            16
        ],
        "int_value": 7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
        "raw_base": 10,
        "raw_value": "7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 1 0110 0101 0011 1001 0110 1001 1001 0000 1011 0001 1110 0001 1101 0011 0010 0001 0001 0111 0101 1101 0000 0110 0011 1000 0111 0001 0111 1011 0111 0011 0110 1011 0011 1111 1010 1111 1101 1100 0100 1010 0100 1100 0111 1011 1000 1011 1001 1011 1100 0101 0001 0001 1010 1000 0111 1001 1010 0111 1010 0001 0101 1111 0011 1111 1001 0110 0100 1100 0010 1011 1110 0000 1010 1000 0000 1000 1010 1101 1111 1101 1101 0100 1101 0100 0011 1111 1100 0010 0011 0101 0111 0001 0010 0110 1000 0101 0000 1010 0001 0010 1010 1101 0010 1110 1011 1100 1010 0000 1011 1001 0000 1100 1001 1001 0000 0000 0011 0011 0111 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
BASE_10 : 7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
BASE_16 : 165396990B1E1D321175D0638717B736B3FAFDC4A4C7B8B9BC511A879A7A15F3F964C2BE0A808ADFDD4D43FC2357126850A12AD2EBCA0B90C9900337000000000000000000000000000000000000000000000000000
BASE_XX : 9BK8INPV90YEOQV29LCVCOWW8A0ZUSKUAR70O5EXIUW1A8NFQ76NR9NTVAKD0G9PUPQY0VNRDI4B4C5MOCV024FJVIJXSXTSF437DU4RYEVEDJ2C2Q52GODUGO1B2XND258G

--------------------


done!





...::: Numeric Information :::...
1423526768 : 2015-02-09 19:06:08





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-vc', '36']
Action Data:
{
    "base": 10,
    "custom_base": 36,
    "value
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb7214acc>
{
    "__NumericObject__": {
        "base10": [
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base16": [
            10,
            12,
            5,
            11,
            0,
            15,
            3,
            14,
            13,
            0,
            9,
            3,
            12,
            10,
            2,
            13,
            6,
            9,
            13,
            2,
            12,
            6,
            12,
            3,
            12,
            12,
            15,
            12,
            10,
            14,
            13,
            12,
            9,
            3,
            15,
            9,
            1,
            1,
            5,
            12,
            9,
            11,
            7,
            14,
            7,
            12,
            6,
            3,
            14,
            12,
            11,
            11,
            0,
            6,
            10,
            14,
            4,
            11,
            4,
            1,
            2,
            15,
            11,
            2,
            3,
            14,
            11,
            2,
            7,
            13,
            5,
            6,
            8,
            13,
            13,
            7,
            8,
            7,
            7,
            11,
            1,
            7,
            4,
            2,
            11,
            15,
            14,
            0,
            8,
            12,
            5,
            7,
            2,
            9,
            15,
            9,
            6,
            2,
            9,
            3,
            5,
            15,
            4,
            10,
            10,
            13,
            15,
            10,
            12,
            1,
            7,
            11,
            7,
            4,
            15,
            15,
            1,
            9,
            12,
            7,
            4,
            8,
            2,
            12,
            2,
            0,
            0,
            1,
            0,
            2,
            5,
            7,
            2,
            10,
            12,
            7,
            8,
            11,
            12,
            6,
            15,
            10,
            5,
            14,
            9,
            15,
            13,
            6,
            0,
            5,
            14,
            9,
            11,
            11,
            9,
            10,
            4,
            3,
            1,
            7,
            6,
            9,
            15,
            13,
            5,
            0,
            4,
            6,
            7,
            3,
            2,
            11,
            11,
            15,
            6,
            14,
            6,
            13,
            13,
            13,
            12,
            4,
            9,
            3,
            0,
            14,
            9,
            6,
            1,
            2,
            5,
            5,
            11,
            3,
            10,
            9,
            2,
            4,
            8,
            11,
            12,
            3,
            15,
            7,
            9,
            3,
            8,
            4,
            0,
            12,
            10,
            4,
            3,
            11,
            9,
            14,
            0,
            0,
            2,
            10,
            4,
            10,
            9,
            12,
            14,
            6,
            11,
            2,
            3,
            2,
            7,
            12,
            10,
            2,
            9,
            2,
            11,
            9,
            3,
            8,
            7,
            11,
            6,
            11,
            13,
            15,
            14,
            13,
            9,
            1,
            15,
            2,
            2,
            9,
            9,
            13,
            10,
            12,
            14,
            0,
            4,
            1,
            15,
            3,
            8,
            5,
            7,
            3,
            6,
            7,
            3,
            12,
            0,
            13,
            11,
            4,
            14,
            7,
            9,
            6,
            3,
            9,
            1,
            0,
            0,
            2,
            2,
            6,
            13,
            13,
            9,
            3,
            10,
            6,
            4,
            2,
            1,
            13,
            8,
            11,
            2,
            10,
            9,
            5,
            7,
            11,
            3,
            11,
            12,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base2": [
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            1,
            14,
            13,
            22,
            33,
            2,
            30,
            26,
            25,
            23,
            24,
            19,
            2,
            20,
            22,
            13,
            23,
            10,
            1,
            27,
            2,
            15,
            32,
            9,
            6,
            5,
            0,
            15,
            26,
            15,
            26,
            4,
            13,
            3,
            7,
            24,
            20,
            16,
            4,
            30,
            35,
            10,
            14,
            30,
            35,
            8,
            11,
            34,
            8,
            13,
            8,
            26,
            31,
            20,
            13,
            19,
            1,
            31,
            6,
            5,
            11,
            24,
            19,
            28,
            19,
            2,
            32,
            15,
            30,
            14,
            29,
            26,
            16,
            19,
            25,
            16,
            3,
            5,
            20,
            29,
            28,
            3,
            13,
            5,
            0,
            18,
            3,
            2,
            4,
            22,
            4,
            30,
            35,
            6,
            2,
            27,
            35,
            32,
            31,
            2,
            12,
            2,
            27,
            22,
            18,
            15,
            3,
            11,
            4,
            17,
            7,
            3,
            5,
            8,
            2,
            1,
            9,
            5,
            32,
            29,
            4,
            30,
            33,
            16,
            34,
            29,
            16,
            4,
            28,
            6,
            5,
            19,
            25,
            11,
            35,
            19,
            12,
            17,
            22,
            15,
            34,
            34,
            2,
            17,
            6,
            14,
            22,
            19,
            7,
            19,
            27,
            19,
            5,
            14,
            26,
            27,
            7,
            29,
            12,
            5,
            1,
            23,
            26,
            32,
            3,
            9,
            26,
            13,
            5,
            17,
            9,
            29,
            31,
            19,
            22,
            33,
            14,
            1,
            8,
            10,
            6,
            26,
            10,
            30,
            26,
            3,
            11,
            32,
            7,
            11,
            19,
            28,
            0,
            7,
            26,
            8,
            16,
            3,
            10,
            27,
            0,
            29,
            27,
            16,
            24,
            16,
            18,
            13,
            27,
            18,
            32,
            3,
            25,
            33,
            16,
            8,
            17,
            22,
            20,
            9,
            16,
            23,
            1,
            9,
            11,
            10,
            16,
            25,
            6,
            7,
            6,
            27,
            11,
            28,
            24,
            26,
            3,
            7,
            5,
            4,
            30,
            1,
            28,
            16,
            33,
            14,
            10,
            6,
            32,
            26,
            10,
            5,
            2,
            5,
            31,
            6,
            4,
            21,
            18,
            18,
            11,
            25,
            32,
            27,
            13,
            4,
            14,
            5,
            26,
            6,
            3,
            4,
            32,
            29,
            17,
            22,
            12,
            19,
            33,
            22,
            7,
            2,
            24,
            7,
            12,
            26,
            3,
            28,
            14,
            20,
            26,
            7,
            28,
            18,
            27,
            17,
            3,
            35,
            16,
            3,
            32,
            29,
            29,
            22,
            4,
            7,
            29,
            30,
            25,
            32,
            34,
            26,
            7,
            29,
            13,
            10,
            25,
            7,
            20,
            32,
            16,
            23,
            32,
            29,
            11,
            6,
            33,
            18,
            24,
            14,
            27,
            19,
            24,
            25,
            1,
            7,
            18,
            3,
            26,
            19,
            16,
            16
        ],
        "int_value
        "raw_base": 10,
        "raw_value
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  :  1010 1100 0101 1011 0000 1111 0011 1110 1101 0000 1001 0011 1100 1010 0010 1101 0110 1001 1101 0010 1100 0110 1100 0011 1100 1100 1111 1100 1010 1110 1101 1100 1001 0011 1111 1001 0001 0001 0101 1100 1001 1011 0111 1110 0111 1100 0110 0011 1110 1100 1011 1011 0000 0110 1010 1110 0100 1011 0100 0001 0010 1111 1011 0010 0011 1110 1011 0010 0111 1101 0101 0110 1000 1101 1101 0111 1000 0111 0111 1011 0001 0111 0100 0010 1011 1111 1110 0000 1000 1100 0101 0111 0010 1001 1111 1001 0110 0010 1001 0011 0101 1111 0100 1010 1010 1101 1111 1010 1100 0001 0111 1011 0111 0100 1111 1111 0001 1001 1100 0111 0100 1000 0010 1100 0010 0000 0000 0001 0000 0010 0101 0111 0010 1010 1100 0111 1000 1011 1100 0110 1111 1010 0101 1110 1001 1111 1101 0110 0000 0101 1110 1001 1011 1011 1001 1010 0100 0011 0001 0111 0110 1001 1111 1101 0101 0000 0100 0110 0111 0011 0010 1011 1011 1111 0110 1110 0110 1101 1101 1101 1100 0100 1001 0011 0000 1110 1001 0110 0001 0010 0101 0101 1011 0011 1010 1001 0010 0100 1000 1011 1100 0011 1111 0111 1001 0011 1000 0100 0000 1100 1010 0100 0011 1011 1001 1110 0000 0000 0010 1010 0100 1010 1001 1100 1110 0110 1011 0010 0011 0010 0111 1100 1010 0010 1001 0010 1011 1001 0011 1000 0111 1011 0110 1011 1101 1111 1110 1101 1001 0001 1111 0010 0010 1001 1001 1101 1010 1100 1110 0000 0100 0001 1111 0011 1000 0101 0111 0011 0110 0111 0011 1100 0000 1101 1011 0100 1110 0111 1001 0110 0011 1001 0001 0000 0000 0010 0010 0110 1101 1101 1001 0011 1010 0110 0100 0010 0001 1101 1000 1011 0010 1010 1001 0101 0111 1011 0011 1011 1100 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
BASE_10 : 700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
BASE_16 : AC5B0F3ED093CA2D69D2C6C3CCFCAEDC93F9115C9B7E7C63ECBB06AE4B412FB23EB27D568DD7877B1742BFE08C5729F962935F4AADFAC17B74FF19C7482C200102572AC78BC6FA5E9FD605E9BB9A431769FD5046732BBF6E6DDDC4930E961255B3A9248BC3F793840CA43B9E002A4A9CE6B2327CA292B9387B6BDFED91F2299DACE041F38573673C0DB4E79639100226DD93A6421D8B2A957B3BC000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
BASE_XX : 1EDMX2UQPNOJ2KMDNA1R2FW9650FQFQ4D37OKG4UZAEUZ8BY8D8QVKDJ1V65BOJSJ2WFUETQGJPG35KTS3D50I324M4UZ62RZWV2C2RMIF3B4H73582195WT4UXGYTG4S65JPBZJCHMFYY2H6EMJ7JRJ5EQR7TC51NQW39QD5H9TVJMXE18A6QAUQ3BW7BJS07Q8G3AR0TRGOGIDRIW3PXG8HMK9GN19BAGP676RBSOQ3754U1SGXEA6WQA525V64LIIBPWRD4E5Q634WTHMCJXM72O7CQ3SEKQ7SIRH3ZG3WTTM47TUPWYQ7TDAP7KWGNWTB6XIOERJOP17I3QJGG

--------------------


done!





...::: Numeric Information :::...
1423526791 : 2015-02-09 19:06:31





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-vc', '36']
Action Data:
{
    "base": 10,
    "custom_base": 36,
    "value
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb71aeacc>
{
    "__NumericObject__": {
        "base10": [
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base16": [
            7,
            14,
            5,
            7,
            13,
            0,
            8,
            9,
            7,
            9,
            12,
            2,
            15,
            4,
            8,
            13,
            5,
            4,
            1,
            8,
            12,
            12,
            14,
            8,
            4,
            5,
            4,
            1,
            14,
            0,
            3,
            12,
            12,
            10,
            0,
            10,
            1,
            10,
            12,
            14,
            11,
            10,
            4,
            2,
            0,
            9,
            6,
            6,
            6,
            8,
            9,
            12,
            6,
            14,
            9,
            12,
            9,
            11,
            1,
            9,
            13,
            8,
            7,
            8,
            9,
            8,
            15,
            9,
            1,
            10,
            8,
            11,
            7,
            7,
            4,
            5,
            4,
            13,
            8,
            3,
            0,
            7,
            10,
            15,
            14,
            8,
            14,
            14,
            4,
            12,
            0,
            4,
            11,
            8,
            15,
            13,
            9,
            13,
            7,
            3,
            3,
            4,
            2,
            6,
            5,
            1,
            6,
            4,
            6,
            11,
            3,
            6,
            7,
            10,
            5,
            5,
            10,
            3,
            4,
            3,
            4,
            13,
            6,
            9,
            1,
            0,
            14,
            0,
            10,
            14,
            0,
            12,
            13,
            0,
            12,
            1,
            0,
            6,
            4,
            3,
            4,
            9,
            12,
            6,
            8,
            13,
            3,
            7,
            13,
            11,
            3,
            4,
            7,
            0,
            0,
            9,
            4,
            7,
            10,
            5,
            4,
            13,
            15,
            13,
            8,
            9,
            6,
            14,
            14,
            3,
            9,
            0,
            3,
            3,
            8,
            4,
            13,
            8,
            15,
            10,
            5,
            9,
            8,
            10,
            1,
            7,
            8,
            9,
            5,
            2,
            4,
            6,
            10,
            10,
            2,
            5,
            7,
            12,
            0,
            11,
            5,
            9,
            9,
            10,
            11,
            5,
            11,
            6,
            10,
            12,
            3,
            10,
            10,
            2,
            8,
            15,
            1,
            10,
            15,
            7,
            6,
            11,
            4,
            6,
            10,
            13,
            10,
            13,
            6,
            3,
            10,
            5,
            11,
            11,
            8,
            12,
            11,
            13,
            9,
            8,
            0,
            14,
            2,
            3,
            1,
            2,
            1,
            9,
            14,
            1,
            1,
            3,
            12,
            11,
            6,
            10,
            1,
            14,
            15,
            7,
            15,
            12,
            6,
            9,
            14,
            6,
            8,
            14,
            1,
            10,
            2,
            8,
            10,
            13,
            4,
            10,
            2,
            12,
            0,
            13,
            2,
            15,
            7,
            5,
            15,
            15,
            2,
            6,
            11,
            6,
            2,
            15,
            13,
            12,
            9,
            11,
            10,
            5,
            7,
            7,
            12,
            10,
            2,
            10,
            3,
            12,
            8,
            11,
            4,
            12,
            13,
            4,
            9,
            8,
            13,
            15,
            5,
            5,
            11,
            2,
            0,
            13,
            15,
            10,
            10,
            14,
            3,
            13,
            13,
            9,
            10,
            9,
            14,
            13,
            2,
            2,
            6,
            14,
            9,
            4,
            15,
            14,
            1,
            12,
            8,
            11,
            9,
            5,
            2,
            7,
            6,
            7,
            13,
            11,
            13,
            1,
            6,
            6,
            7,
            0,
            4,
            8,
            2,
            8,
            14,
            0,
            14,
            11,
            5,
            0,
            12,
            3,
            2,
            11,
            5,
            5,
            0,
            0,
            9,
            2,
            1,
            10,
            12,
            3,
            9,
            0,
            1,
            13,
            11,
            3,
            7,
            13,
            4,
            14,
            8,
            15,
            2,
            7,
            2,
            5,
            2,
            3,
            9,
            15,
            7,
            8,
            8,
            7,
            12,
            0,
            5,
            6,
            1,
            12,
            2,
            13,
            3,
            5,
            13,
            11,
            3,
            6,
            5,
            0,
            13,
            5,
            9,
            1,
            15,
            9,
            5,
            7,
            0,
            14,
            8,
            15,
            12,
            0,
            2,
            4,
            8,
            12,
            6,
            6,
            14,
            10,
            11,
            6,
            3,
            6,
            14,
            4,
            10,
            3,
            8,
            10,
            8,
            7,
            1,
            8,
            5,
            5,
            11,
            12,
            11,
            10,
            2,
            9,
            6,
            14,
            1,
            13,
            12,
            9,
            7,
            0,
            12,
            12,
            15,
            3,
            12,
            5,
            14,
            11,
            3,
            11,
            8,
            1,
            2,
            15,
            0,
            8,
            8,
            2,
            2,
            10,
            6,
            3,
            6,
            2,
            14,
            11,
            7,
            3,
            1,
            9,
            12,
            2,
            12,
            5,
            14,
            6,
            4,
            4,
            13,
            3,
            10,
            10,
            7,
            12,
            5,
            8,
            2,
            15,
            10,
            0,
            14,
            13,
            9,
            0,
            8,
            1,
            13,
            6,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base2": [
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            11,
            27,
            9,
            32,
            12,
            35,
            19,
            13,
            12,
            14,
            31,
            7,
            19,
            32,
            13,
            33,
            5,
            6,
            21,
            5,
            24,
            27,
            11,
            19,
            19,
            32,
            20,
            29,
            17,
            2,
            24,
            5,
            12,
            20,
            8,
            24,
            9,
            4,
            29,
            2,
            7,
            3,
            6,
            30,
            4,
            17,
            1,
            34,
            18,
            7,
            3,
            0,
            32,
            11,
            16,
            23,
            13,
            10,
            20,
            35,
            35,
            15,
            25,
            27,
            4,
            0,
            28,
            22,
            14,
            16,
            6,
            21,
            7,
            18,
            0,
            27,
            13,
            10,
            34,
            33,
            10,
            8,
            16,
            17,
            19,
            8,
            14,
            26,
            7,
            10,
            18,
            4,
            26,
            22,
            2,
            33,
            33,
            4,
            18,
            32,
            14,
            17,
            0,
            15,
            1,
            33,
            25,
            31,
            24,
            15,
            23,
            18,
            25,
            32,
            22,
            3,
            11,
            2,
            7,
            24,
            27,
            12,
            15,
            17,
            8,
            25,
            14,
            28,
            12,
            35,
            5,
            18,
            20,
            33,
            28,
            9,
            32,
            28,
            10,
            14,
            15,
            25,
            2,
            32,
            0,
            20,
            11,
            21,
            26,
            34,
            25,
            9,
            27,
            15,
            6,
            28,
            34,
            26,
            10,
            34,
            28,
            10,
            11,
            11,
            5,
            19,
            24,
            24,
            32,
            14,
            1,
            7,
            3,
            34,
            12,
            26,
            6,
            1,
            34,
            23,
            11,
            5,
            28,
            32,
            1,
            25,
            16,
            30,
            9,
            18,
            4,
            3,
            14,
            29,
            15,
            29,
            24,
            12,
            10,
            14,
            16,
            10,
            29,
            13,
            18,
            18,
            20,
            31,
            31,
            16,
            16,
            6,
            6,
            31,
            25,
            23,
            8,
            12,
            33,
            15,
            31,
            5,
            8,
            10,
            0,
            4,
            3,
            13,
            2,
            29,
            20,
            28,
            34,
            22,
            7,
            26,
            18,
            14,
            20,
            16,
            1,
            4,
            8,
            16,
            11,
            9,
            30,
            4,
            16,
            10,
            28,
            8,
            34,
            9,
            21,
            21,
            9,
            15,
            18,
            9,
            20,
            3,
            5,
            23,
            15,
            1,
            28,
            21,
            23,
            27,
            27,
            12,
            32,
            22,
            24,
            17,
            24,
            11,
            9,
            28,
            35,
            26,
            27,
            35,
            30,
            8,
            22,
            24,
            11,
            5,
            22,
            35,
            28,
            19,
            13,
            34,
            17,
            5,
            21,
            32,
            6,
            0,
            27,
            29,
            14,
            6,
            28,
            28,
            14,
            17,
            10,
            6,
            12,
            22,
            0,
            25,
            13,
            17,
            35,
            15,
            17,
            9,
            28,
            24,
            2,
            15,
            8,
            5,
            12,
            10,
            24,
            20,
            4,
            26,
            18,
            18,
            15,
            33,
            3,
            4,
            1,
            9,
            3,
            30,
            20,
            7,
            13,
            35,
            25,
            23,
            16,
            15,
            20,
            25,
            35,
            19,
            10,
            31,
            33,
            28,
            26,
            26,
            27,
            4,
            6,
            7,
            34,
            4,
            16,
            3,
            22,
            34,
            24,
            17,
            20,
            22,
            31,
            22,
            26,
            19,
            24,
            24,
            3,
            1,
            23,
            14,
            34,
            29,
            11,
            8,
            24,
            24,
            23,
            23,
            20,
            14,
            22,
            26,
            12,
            23,
            8,
            30,
            29,
            2,
            1,
            19,
            10,
            34,
            35,
            10,
            7,
            8,
            32,
            12,
            17,
            1,
            10,
            15,
            28,
            30,
            22,
            8,
            28,
            10,
            31,
            25,
            13,
            28,
            0,
            30,
            23,
            3,
            34,
            33,
            4,
            9,
            6,
            34,
            8,
            13,
            17,
            6,
            7,
            18,
            20,
            20,
            8,
            28,
            11,
            4,
            34,
            11,
            27,
            20,
            34,
            27,
            3,
            4,
            22,
            28,
            28,
            15,
            12,
            24,
            28,
            5,
            34,
            22,
            30,
            20,
            33,
            13,
            12,
            8,
            6,
            12,
            28,
            27,
            23,
            22,
            28,
            20,
            20,
            27,
            11,
            7,
            16,
            8,
            12,
            14,
            20,
            28,
            16,
            9,
            17,
            10,
            30,
            15,
            11,
            14,
            8,
            23,
            14,
            14,
            0,
            8,
            5,
            10,
            3,
            29,
            30,
            0,
            22,
            19,
            12,
            23,
            2,
            14,
            19,
            13,
            33,
            3,
            17,
            31,
            2,
            21,
            28,
            22,
            23,
            33,
            2,
            21,
            23,
            22,
            12,
            21,
            23,
            25,
            22,
            2,
            1,
            25,
            23,
            8,
            24,
            17,
            0,
            33,
            9,
            26,
            33,
            24,
            18,
            9,
            25,
            11,
            35,
            0,
            5,
            28,
            7,
            22,
            9,
            2,
            18,
            30,
            32,
            28,
            18,
            30,
            24,
            30,
            8,
            30,
            31,
            24,
            9,
            32,
            14,
            29,
            7,
            25,
            17,
            4,
            29,
            17,
            25,
            13,
            4,
            32,
            28,
            16
        ],
        "int_value
        "raw_base": 10,
        "raw_value
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 111 1110 0101 0111 1101 0000 1000 1001 0111 1001 1100 0010 1111 0100 1000 1101 0101 0100 0001 1000 1100 1100 1110 1000 0100 0101 0100 0001 1110 0000 0011 1100 1100 1010 0000 1010 0001 1010 1100 1110 1011 1010 0100 0010 0000 1001 0110 0110 0110 1000 1001 1100 0110 1110 1001 1100 1001 1011 0001 1001 1101 1000 0111 1000 1001 1000 1111 1001 0001 1010 1000 1011 0111 0111 0100 0101 0100 1101 1000 0011 0000 0111 1010 1111 1110 1000 1110 1110 0100 1100 0000 0100 1011 1000 1111 1101 1001 1101 0111 0011 0011 0100 0010 0110 0101 0001 0110 0100 0110 1011 0011 0110 0111 1010 0101 0101 1010 0011 0100 0011 0100 1101 0110 1001 0001 0000 1110 0000 1010 1110 0000 1100 1101 0000 1100 0001 0000 0110 0100 0011 0100 1001 1100 0110 1000 1101 0011 0111 1101 1011 0011 0100 0111 0000 0000 1001 0100 0111 1010 0101 0100 1101 1111 1101 1000 1001 0110 1110 1110 0011 1001 0000 0011 0011 1000 0100 1101 1000 1111 1010 0101 1001 1000 1010 0001 0111 1000 1001 0101 0010 0100 0110 1010 1010 0010 0101 0111 1100 0000 1011 0101 1001 1001 1010 1011 0101 1011 0110 1010 1100 0011 1010 1010 0010 1000 1111 0001 1010 1111 0111 0110 1011 0100 0110 1010 1101 1010 1101 0110 0011 1010 0101 1011 1011 1000 1100 1011 1101 1001 1000 0000 1110 0010 0011 0001 0010 0001 1001 1110 0001 0001 0011 1100 1011 0110 1010 0001 1110 1111 0111 1111 1100 0110 1001 1110 0110 1000 1110 0001 1010 0010 1000 1010 1101 0100 1010 0010 1100 0000 1101 0010 1111 0111 0101 1111 1111 0010 0110 1011 0110 0010 1111 1101 1100 1001 1011 1010 0101 0111 0111 1100 1010 0010 1010 0011 1100 1000 1011 0100 1100 1101 0100 1001 1000 1101 1111 0101 0101 1011 0010 0000 1101 1111 1010 1010 1110 0011 1101 1101 1001 1010 1001 1110 1101 0010 0010 0110 1110 1001 0100 1111 1110 0001 1100 1000 1011 1001 0101 0010 0111 0110 0111 1101 1011 1101 0001 0110 0110 0111 0000 0100 1000 0010 1000 1110 0000 1110 1011 0101 0000 1100 0011 0010 1011 0101 0101 0000 0000 1001 0010 0001 1010 1100 0011 1001 0000 0001 1101 1011 0011 0111 1101 0100 1110 1000 1111 0010 0111 0010 0101 0010 0011 1001 1111 0111 1000 1000 0111 1100 0000 0101 0110 0001 1100 0010 1101 0011 0101 1101 1011 0011 0110 0101 0000 1101 0101 1001 0001 1111 1001 0101 0111 0000 1110 1000 1111 1100 0000 0010 0100 1000 1100 0110 0110 1110 1010 1011 0110 0011 0110 1110 0100 1010 0011 1000 1010 1000 0111 0001 1000 0101 0101 1011 1100 1011 1010 0010 1001 0110 1110 0001 1101 1100 1001 0111 0000 1100 1100 1111 0011 1100 0101 1110 1011 0011 1011 1000 0001 0010 1111 0000 1000 1000 0010 0010 1010 0110 0011 0110 0010 1110 1011 0111 0011 0001 1001 1100 0010 1100 0101 1110 0110 0100 0100 1101 0011 1010 1010 0111 1100 0101 1000 0010 1111 1010 0000 1110 1101 1001 0000 1000 0001 1101 0110 0111 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000


BASE_XX : BR9WCZJDCEV7JWDX56L5ORBJJWKTH2O5CK8O94T2736U4H1YI730WBGNDAKZZFPR40SMEG6L7I0RDAYXA8GHJ8EQ7AI4QM2XX4IWEH0F1XPVOFNIPWM3B27ORCFH8PESCZ5IKXS9WSAEFP2W0KBLQYP9RF6SYQAYSABB5JOOWE173YCQ61YNB5SW1PGU9I43ETFTOCAEGATDIIKVVGG66VPN8CXFV58A043D2TKSYM7QIEKG148GB9U4GAS8Y9LL9FI9K35NF1SLNRRCWMOHOB9SZQRZU8MOB5MZSJDYH5LW60RTE6SSEHA6CM0PDHZFH9SO2F85CAOK4QIIFX34193UK7DZPNGFKPZJAVXSQQR467Y4G3MYOHKMVMQJOO31NEYTB8OONNKEMQCN8UT21JAYZA78WCH1AFSUM8SAVPDS0UN3YX496Y8DH67IKK8SB4YBRKYR34MSSFCOS5YMUKXDC86CSRNMSKKRB7G8CEKSG9HAUFBE8NEE085A3TU0MJCN2EJDX3HV2LSMNX2LNMCLNPM21PN8OH0X9QXOI9PBZ05S7M92IUWSIUOU8UVO9WET7PH4THPD4WSG

--------------------


done!





...::: Numeric Information :::...
1423527717 : 2015-02-09 19:21:57





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-vc', '36']
Action Data:
{
    "base": 10,
    "custom_base": 36,
    "value": "700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb7224aec>
{
    "__NumericObject__": {
        "base10": [
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base16": [
            7,
            14,
            5,
            7,
            13,
            0,
            8,
            9,
            7,
            9,
            12,
            2,
            15,
            4,
            8,
            13,
            5,
            4,
            1,
            8,
            12,
            12,
            14,
            8,
            4,
            5,
            4,
            1,
            14,
            0,
            3,
            12,
            12,
            10,
            0,
            10,
            1,
            10,
            12,
            14,
            11,
            10,
            4,
            2,
            0,
            9,
            6,
            6,
            6,
            8,
            9,
            12,
            6,
            14,
            9,
            12,
            9,
            11,
            1,
            9,
            13,
            8,
            7,
            8,
            9,
            8,
            15,
            9,
            1,
            10,
            8,
            11,
            7,
            7,
            4,
            5,
            4,
            13,
            8,
            3,
            0,
            7,
            10,
            15,
            14,
            8,
            14,
            14,
            4,
            12,
            0,
            4,
            11,
            8,
            15,
            13,
            9,
            13,
            7,
            3,
            3,
            4,
            2,
            6,
            5,
            1,
            6,
            4,
            6,
            11,
            3,
            6,
            7,
            10,
            5,
            5,
            10,
            3,
            4,
            3,
            4,
            13,
            6,
            9,
            1,
            0,
            14,
            0,
            10,
            14,
            0,
            12,
            13,
            0,
            12,
            1,
            0,
            6,
            4,
            3,
            4,
            9,
            12,
            6,
            8,
            13,
            3,
            7,
            13,
            11,
            3,
            4,
            7,
            0,
            0,
            9,
            4,
            7,
            10,
            5,
            4,
            13,
            15,
            13,
            8,
            9,
            6,
            14,
            14,
            3,
            9,
            0,
            3,
            3,
            8,
            4,
            13,
            8,
            15,
            10,
            5,
            9,
            8,
            10,
            1,
            7,
            8,
            9,
            5,
            2,
            4,
            6,
            10,
            10,
            2,
            5,
            7,
            12,
            0,
            11,
            5,
            9,
            9,
            10,
            11,
            5,
            11,
            6,
            10,
            12,
            3,
            10,
            10,
            2,
            8,
            15,
            1,
            10,
            15,
            7,
            6,
            11,
            4,
            6,
            10,
            13,
            10,
            13,
            6,
            3,
            10,
            5,
            11,
            11,
            8,
            12,
            11,
            13,
            9,
            8,
            0,
            14,
            2,
            3,
            1,
            2,
            1,
            9,
            14,
            1,
            1,
            3,
            12,
            11,
            6,
            10,
            1,
            14,
            15,
            7,
            15,
            12,
            6,
            9,
            14,
            6,
            8,
            14,
            1,
            10,
            2,
            8,
            10,
            13,
            4,
            10,
            2,
            12,
            0,
            13,
            2,
            15,
            7,
            5,
            15,
            15,
            2,
            6,
            11,
            6,
            2,
            15,
            13,
            12,
            9,
            11,
            10,
            5,
            7,
            7,
            12,
            10,
            2,
            10,
            3,
            12,
            8,
            11,
            4,
            12,
            13,
            4,
            9,
            8,
            13,
            15,
            5,
            5,
            11,
            2,
            0,
            13,
            15,
            10,
            10,
            14,
            3,
            13,
            13,
            9,
            10,
            9,
            14,
            13,
            2,
            2,
            6,
            14,
            9,
            4,
            15,
            14,
            1,
            12,
            8,
            11,
            9,
            5,
            2,
            7,
            6,
            7,
            13,
            11,
            13,
            1,
            6,
            6,
            7,
            0,
            4,
            8,
            2,
            8,
            14,
            0,
            14,
            11,
            5,
            0,
            12,
            3,
            2,
            11,
            5,
            5,
            0,
            0,
            9,
            2,
            1,
            10,
            12,
            3,
            9,
            0,
            1,
            13,
            11,
            3,
            7,
            13,
            4,
            14,
            8,
            15,
            2,
            7,
            2,
            5,
            2,
            3,
            9,
            15,
            7,
            8,
            8,
            7,
            12,
            0,
            5,
            6,
            1,
            12,
            2,
            13,
            3,
            5,
            13,
            11,
            3,
            6,
            5,
            0,
            13,
            5,
            9,
            1,
            15,
            9,
            5,
            7,
            0,
            14,
            8,
            15,
            12,
            0,
            2,
            4,
            8,
            12,
            6,
            6,
            14,
            10,
            11,
            6,
            3,
            6,
            14,
            4,
            10,
            3,
            8,
            10,
            8,
            7,
            1,
            8,
            5,
            5,
            11,
            12,
            11,
            10,
            2,
            9,
            6,
            14,
            1,
            13,
            12,
            9,
            7,
            0,
            12,
            12,
            15,
            3,
            12,
            5,
            14,
            11,
            3,
            11,
            8,
            1,
            2,
            15,
            0,
            8,
            8,
            2,
            2,
            10,
            6,
            3,
            6,
            2,
            14,
            11,
            7,
            3,
            1,
            9,
            12,
            2,
            12,
            5,
            14,
            6,
            4,
            4,
            13,
            3,
            10,
            10,
            7,
            12,
            5,
            8,
            2,
            15,
            10,
            0,
            14,
            13,
            9,
            0,
            8,
            1,
            13,
            6,
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base2": [
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 36,
        "custom_value": [
            11,
            27,
            9,
            32,
            12,
            35,
            19,
            13,
            12,
            14,
            31,
            7,
            19,
            32,
            13,
            33,
            5,
            6,
            21,
            5,
            24,
            27,
            11,
            19,
            19,
            32,
            20,
            29,
            17,
            2,
            24,
            5,
            12,
            20,
            8,
            24,
            9,
            4,
            29,
            2,
            7,
            3,
            6,
            30,
            4,
            17,
            1,
            34,
            18,
            7,
            3,
            0,
            32,
            11,
            16,
            23,
            13,
            10,
            20,
            35,
            35,
            15,
            25,
            27,
            4,
            0,
            28,
            22,
            14,
            16,
            6,
            21,
            7,
            18,
            0,
            27,
            13,
            10,
            34,
            33,
            10,
            8,
            16,
            17,
            19,
            8,
            14,
            26,
            7,
            10,
            18,
            4,
            26,
            22,
            2,
            33,
            33,
            4,
            18,
            32,
            14,
            17,
            0,
            15,
            1,
            33,
            25,
            31,
            24,
            15,
            23,
            18,
            25,
            32,
            22,
            3,
            11,
            2,
            7,
            24,
            27,
            12,
            15,
            17,
            8,
            25,
            14,
            28,
            12,
            35,
            5,
            18,
            20,
            33,
            28,
            9,
            32,
            28,
            10,
            14,
            15,
            25,
            2,
            32,
            0,
            20,
            11,
            21,
            26,
            34,
            25,
            9,
            27,
            15,
            6,
            28,
            34,
            26,
            10,
            34,
            28,
            10,
            11,
            11,
            5,
            19,
            24,
            24,
            32,
            14,
            1,
            7,
            3,
            34,
            12,
            26,
            6,
            1,
            34,
            23,
            11,
            5,
            28,
            32,
            1,
            25,
            16,
            30,
            9,
            18,
            4,
            3,
            14,
            29,
            15,
            29,
            24,
            12,
            10,
            14,
            16,
            10,
            29,
            13,
            18,
            18,
            20,
            31,
            31,
            16,
            16,
            6,
            6,
            31,
            25,
            23,
            8,
            12,
            33,
            15,
            31,
            5,
            8,
            10,
            0,
            4,
            3,
            13,
            2,
            29,
            20,
            28,
            34,
            22,
            7,
            26,
            18,
            14,
            20,
            16,
            1,
            4,
            8,
            16,
            11,
            9,
            30,
            4,
            16,
            10,
            28,
            8,
            34,
            9,
            21,
            21,
            9,
            15,
            18,
            9,
            20,
            3,
            5,
            23,
            15,
            1,
            28,
            21,
            23,
            27,
            27,
            12,
            32,
            22,
            24,
            17,
            24,
            11,
            9,
            28,
            35,
            26,
            27,
            35,
            30,
            8,
            22,
            24,
            11,
            5,
            22,
            35,
            28,
            19,
            13,
            34,
            17,
            5,
            21,
            32,
            6,
            0,
            27,
            29,
            14,
            6,
            28,
            28,
            14,
            17,
            10,
            6,
            12,
            22,
            0,
            25,
            13,
            17,
            35,
            15,
            17,
            9,
            28,
            24,
            2,
            15,
            8,
            5,
            12,
            10,
            24,
            20,
            4,
            26,
            18,
            18,
            15,
            33,
            3,
            4,
            1,
            9,
            3,
            30,
            20,
            7,
            13,
            35,
            25,
            23,
            16,
            15,
            20,
            25,
            35,
            19,
            10,
            31,
            33,
            28,
            26,
            26,
            27,
            4,
            6,
            7,
            34,
            4,
            16,
            3,
            22,
            34,
            24,
            17,
            20,
            22,
            31,
            22,
            26,
            19,
            24,
            24,
            3,
            1,
            23,
            14,
            34,
            29,
            11,
            8,
            24,
            24,
            23,
            23,
            20,
            14,
            22,
            26,
            12,
            23,
            8,
            30,
            29,
            2,
            1,
            19,
            10,
            34,
            35,
            10,
            7,
            8,
            32,
            12,
            17,
            1,
            10,
            15,
            28,
            30,
            22,
            8,
            28,
            10,
            31,
            25,
            13,
            28,
            0,
            30,
            23,
            3,
            34,
            33,
            4,
            9,
            6,
            34,
            8,
            13,
            17,
            6,
            7,
            18,
            20,
            20,
            8,
            28,
            11,
            4,
            34,
            11,
            27,
            20,
            34,
            27,
            3,
            4,
            22,
            28,
            28,
            15,
            12,
            24,
            28,
            5,
            34,
            22,
            30,
            20,
            33,
            13,
            12,
            8,
            6,
            12,
            28,
            27,
            23,
            22,
            28,
            20,
            20,
            27,
            11,
            7,
            16,
            8,
            12,
            14,
            20,
            28,
            16,
            9,
            17,
            10,
            30,
            15,
            11,
            14,
            8,
            23,
            14,
            14,
            0,
            8,
            5,
            10,
            3,
            29,
            30,
            0,
            22,
            19,
            12,
            23,
            2,
            14,
            19,
            13,
            33,
            3,
            17,
            31,
            2,
            21,
            28,
            22,
            23,
            33,
            2,
            21,
            23,
            22,
            12,
            21,
            23,
            25,
            22,
            2,
            1,
            25,
            23,
            8,
            24,
            17,
            0,
            33,
            9,
            26,
            33,
            24,
            18,
            9,
            25,
            11,
            35,
            0,
            5,
            28,
            7,
            22,
            9,
            2,
            18,
            30,
            32,
            28,
            18,
            30,
            24,
            30,
            8,
            30,
            31,
            24,
            9,
            32,
            14,
            29,
            7,
            25,
            17,
            4,
            29,
            17,
            25,
            13,
            4,
            32,
            28,
            16
        ],
        "int_value
        "raw_base": 10,
        "raw_value
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 111 1110 0101 0111 1101 0000 1000 1001 0111 1001 1100 0010 1111 0100 1000 1101 0101 0100 0001 1000 1100 1100 1110 1000 0100 0101 0100 0001 1110 0000 0011 1100 1100 1010 0000 1010 0001 1010 1100 1110 1011 1010 0100 0010 0000 1001 0110 0110 0110 1000 1001 1100 0110 1110 1001 1100 1001 1011 0001 1001 1101 1000 0111 1000 1001 1000 1111 1001 0001 1010 1000 1011 0111 0111 0100 0101 0100 1101 1000 0011 0000 0111 1010 1111 1110 1000 1110 1110 0100 1100 0000 0100 1011 1000 1111 1101 1001 1101 0111 0011 0011 0100 0010 0110 0101 0001 0110 0100 0110 1011 0011 0110 0111 1010 0101 0101 1010 0011 0100 0011 0100 1101 0110 1001 0001 0000 1110 0000 1010 1110 0000 1100 1101 0000 1100 0001 0000 0110 0100 0011 0100 1001 1100 0110 1000 1101 0011 0111 1101 1011 0011 0100 0111 0000 0000 1001 0100 0111 1010 0101 0100 1101 1111 1101 1000 1001 0110 1110 1110 0011 1001 0000 0011 0011 1000 0100 1101 1000 1111 1010 0101 1001 1000 1010 0001 0111 1000 1001 0101 0010 0100 0110 1010 1010 0010 0101 0111 1100 0000 1011 0101 1001 1001 1010 1011 0101 1011 0110 1010 1100 0011 1010 1010 0010 1000 1111 0001 1010 1111 0111 0110 1011 0100 0110 1010 1101 1010 1101 0110 0011 1010 0101 1011 1011 1000 1100 1011 1101 1001 1000 0000 1110 0010 0011 0001 0010 0001 1001 1110 0001 0001 0011 1100 1011 0110 1010 0001 1110 1111 0111 1111 1100 0110 1001 1110 0110 1000 1110 0001 1010 0010 1000 1010 1101 0100 1010 0010 1100 0000 1101 0010 1111 0111 0101 1111 1111 0010 0110 1011 0110 0010 1111 1101 1100 1001 1011 1010 0101 0111 0111 1100 1010 0010 1010 0011 1100 1000 1011 0100 1100 1101 0100 1001 1000 1101 1111 0101 0101 1011 0010 0000 1101 1111 1010 1010 1110 0011 1101 1101 1001 1010 1001 1110 1101 0010 0010 0110 1110 1001 0100 1111 1110 0001 1100 1000 1011 1001 0101 0010 0111 0110 0111 1101 1011 1101 0001 0110 0110 0111 0000 0100 1000 0010 1000 1110 0000 1110 1011 0101 0000 1100 0011 0010 1011 0101 0101 0000 0000 1001 0010 0001 1010 1100 0011 1001 0000 0001 1101 1011 0011 0111 1101 0100 1110 1000 1111 0010 0111 0010 0101 0010 0011 1001 1111 0111 1000 1000 0111 1100 0000 0101 0110 0001 1100 0010 1101 0011 0101 1101 1011 0011 0110 0101 0000 1101 0101 1001 0001 1111 1001 0101 0111 0000 1110 1000 1111 1100 0000 0010 0100 1000 1100 0110 0110 1110 1010 1011 0110 0011 0110 1110 0100 1010 0011 1000 1010 1000 0111 0001 1000 0101 0101 1011 1100 1011 1010 0010 1001 0110 1110 0001 1101 1100 1001 0111 0000 1100 1100 1111 0011 1100 0101 1110 1011 0011 1011 1000 0001 0010 1111 0000 1000 1000 0010 0010 1010 0110 0011 0110 0010 1110 1011 0111 0011 0001 1001 1100 0010 1100 0101 1110 0110 0100 0100 1101 0011 1010 1010 0111 1100 0101 1000 0010 1111 1010 0000 1110 1101 1001 0000 1000 0001 1101 0110 0111 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000




--------------------


done!





...::: Numeric Information :::...
1423531260 : 2015-02-09 20:21:00





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '116']
Action Data:
{
    "base": 10,
    "custom_base": 0,
    "value": "116"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb71c0aec>
{
    "__NumericObject__": {
        "base10": [
            1,
            1,
            6
        ],
        "base16": [
            7,
            4
        ],
        "base2": [
            1,
            1,
            1,
            0,
            1,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 116,
        "raw_base": 10,
        "raw_value": "116"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 111 0100
BASE_10 : 116
BASE_16 : 74
BASE_XX : 

--------------------


done!





...::: Numeric Information :::...
1423531276 : 2015-02-09 20:21:16





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '116', '-l', '1']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 0,
    "value": "116"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb7220b0c>
{
    "__NumericObject__": {
        "base10": [
            1,
            1,
            6
        ],
        "base16": [
            7,
            4
        ],
        "base2": [
            1,
            1,
            1,
            0,
            1,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 116,
        "raw_base": 10,
        "raw_value": "116"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb7220bcc>
{
    "__NumericObject__": {
        "base10": [
            2,
            3,
            2
        ],
        "base16": [
            14,
            8
        ],
        "base2": [
            1,
            1,
            1,
            0,
            1,
            0,
            0,
            0
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 232,
        "raw_base": 10,
        "raw_value": "232"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 111 0100
BASE_10 : 116
BASE_16 : 74
BASE_XX : 

--------------------

Shifted number (by << 1)
BASE_2  :  1110 1000
BASE_10 : 232
BASE_16 : E8
BASE_XX : 

--------------------

Bitshift Comparison

original : 0000 0111 0100
direction: << 1 <<
aftermath: 0000 1110 1000

done!





...::: Numeric Information :::...
1423533589 : 2015-02-09 20:59:49





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '7000000000000000', '-l', '1', '-c', '37']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 37,
    "value": "7000000000000000"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb71903ac>
{
    "__NumericObject__": {
        "base10": [
            7,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base16": [
            1,
            8,
            13,
            14,
            7,
            6,
            8,
            1,
            6,
            13,
            8,
            0,
            0,
            0
        ],
        "base2": [
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 37,
        "custom_value": [
            1,
            16,
            31,
            33,
            3,
            6,
            33,
            14,
            32,
            20,
            7
        ],
        "int_value": 7000000000000000,
        "raw_base": 10,
        "raw_value": "7000000000000000"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb719050c>
{
    "__NumericObject__": {
        "base10": [
            1,
            4,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "base16": [
            3,
            1,
            11,
            12,
            14,
            13,
            0,
            2,
            13,
            11,
            0,
            0,
            0,
            0
        ],
        "base2": [
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 37,
        "custom_value": [
            2,
            33,
            26,
            29,
            6,
            13,
            29,
            29,
            28,
            3,
            14
        ],
        "int_value": 14000000000000000,
        "raw_base": 10,
        "raw_value": "14000000000000000"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 1 1000 1101 1110 0111 0110 1000 0001 0110 1101 1000 0000 0000 0000
BASE_10 : 7000000000000000
BASE_16 : 18DE76816D8000
BASE_XX : 1GVX36XEWK7

--------------------

Shifted number (by << 1)
BASE_2  : 11 0001 1011 1100 1110 1101 0000 0010 1101 1011 0000 0000 0000 0000
BASE_10 : 14000000000000000
BASE_16 : 31BCED02DB0000
BASE_XX : 2XQT6DTTS3E

--------------------

Bitshift Comparison

original : 0001 1000 1101 1110 0111 0110 1000 0001 0110 1101 1000 0000 0000 0000
direction: << 1 <<
aftermath: 0011 0001 1011 1100 1110 1101 0000 0010 1101 1011 0000 0000 0000 0000

done!





...::: Numeric Information :::...
1423533631 : 2015-02-09 21:00:31





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '999999999999999999999999999999999999999999999999999999999', '-l', '1', '-c', '37']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 1,
    "custom_base": 37,
    "value": "999999999999999999999999999999999999999999999999999999999"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb7180bac>
{
    "__NumericObject__": {
        "base10": [
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9
        ],
        "base16": [
            2,
            8,
            12,
            8,
            7,
            12,
            11,
            5,
            12,
            8,
            9,
            10,
            2,
            5,
            7,
            1,
            14,
            11,
            15,
            13,
            12,
            11,
            5,
            4,
            8,
            6,
            4,
            10,
            13,
            10,
            8,
            3,
            4,
            9,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15
        ],
        "base2": [
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1
        ],
        "custom_base": 37,
        "custom_value": [
            3,
            18,
            25,
            33,
            6,
            10,
            17,
            17,
            28,
            0,
            13,
            36,
            36,
            32,
            24,
            1,
            32,
            6,
            31,
            35,
            17,
            7,
            13,
            1,
            36,
            10,
            12,
            32,
            12,
            5,
            3,
            6,
            35,
            32,
            19,
            32,
            0
        ],
        "int_value": 999999999999999999999999999999999999999999999999999999999,
        "raw_base": 10,
        "raw_value": "999999999999999999999999999999999999999999999999999999999"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb7180d0c>
{
    "__NumericObject__": {
        "base10": [
            1,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            8
        ],
        "base16": [
            5,
            1,
            9,
            0,
            15,
            9,
            6,
            11,
            9,
            1,
            3,
            4,
            4,
            10,
            14,
            3,
            13,
            7,
            15,
            11,
            9,
            6,
            10,
            9,
            0,
            12,
            9,
            5,
            11,
            5,
            0,
            6,
            9,
            3,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            14
        ],
        "base2": [
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0
        ],
        "custom_base": 37,
        "custom_value": [
            7,
            0,
            14,
            29,
            12,
            20,
            34,
            35,
            19,
            0,
            27,
            36,
            36,
            28,
            11,
            3,
            27,
            13,
            26,
            33,
            34,
            14,
            26,
            3,
            35,
            20,
            25,
            27,
            24,
            10,
            6,
            13,
            34,
            28,
            2,
            27,
            0
        ],
        "int_value": 1999999999999999999999999999999999999999999999999999999998,
        "raw_base": 10,
        "raw_value": "1999999999999999999999999999999999999999999999999999999998"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 10 1000 1100 1000 0111 1100 1011 0101 1100 1000 1001 1010 0010 0101 0111 0001 1110 1011 1111 1101 1100 1011 0101 0100 1000 0110 0100 1010 1101 1010 1000 0011 0100 1001 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111
BASE_10 : 999999999999999999999999999999999999999999999999999999999
BASE_16 : 28C87CB5C89A2571EBFDCB54864ADA8349FFFFFFFFFFFFFF
BASE_XX : 3IPX6AHHS0DՉՉWO1W6VZH7D1ՉACWC536ZWJW0

--------------------

Shifted number (by << 1)
BASE_2  : 101 0001 1001 0000 1111 1001 0110 1011 1001 0001 0011 0100 0100 1010 1110 0011 1101 0111 1111 1011 1001 0110 1010 1001 0000 1100 1001 0101 1011 0101 0000 0110 1001 0011 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 1110
BASE_10 : 1999999999999999999999999999999999999999999999999999999998
BASE_16 : 5190F96B91344AE3D7FB96A90C95B50693FFFFFFFFFFFFFE
BASE_XX : 70ETCKYZJ0RՉՉSB3RDQXYEQ3ZKPROA6DYS2R0

--------------------

Bitshift Comparison

original : 0010 1000 1100 1000 0111 1100 1011 0101 1100 1000 1001 1010 0010 0101 0111 0001 1110 1011 1111 1101 1100 1011 0101 0100 1000 0110 0100 1010 1101 1010 1000 0011 0100 1001 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111
direction: << 1 <<
aftermath: 0101 0001 1001 0000 1111 1001 0110 1011 1001 0001 0011 0100 0100 1010 1110 0011 1101 0111 1111 1011 1001 0110 1010 1001 0000 1100 1001 0101 1011 0101 0000 0110 1001 0011 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 1110

done!





...::: Numeric Information :::...
1423533641 : 2015-02-09 21:00:41





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '999999999999999999999999999999999999999999999999999999999', '-l', '19', '-c', '37']
Action Data:
{
    "base": 10,
    "bitshift_operation": "<<",
    "bitshift_value": 19,
    "custom_base": 37,
    "value": "999999999999999999999999999999999999999999999999999999999"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb7230bcc>
{
    "__NumericObject__": {
        "base10": [
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9
        ],
        "base16": [
            2,
            8,
            12,
            8,
            7,
            12,
            11,
            5,
            12,
            8,
            9,
            10,
            2,
            5,
            7,
            1,
            14,
            11,
            15,
            13,
            12,
            11,
            5,
            4,
            8,
            6,
            4,
            10,
            13,
            10,
            8,
            3,
            4,
            9,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15
        ],
        "base2": [
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1
        ],
        "custom_base": 37,
        "custom_value": [
            3,
            18,
            25,
            33,
            6,
            10,
            17,
            17,
            28,
            0,
            13,
            36,
            36,
            32,
            24,
            1,
            32,
            6,
            31,
            35,
            17,
            7,
            13,
            1,
            36,
            10,
            12,
            32,
            12,
            5,
            3,
            6,
            35,
            32,
            19,
            32,
            0
        ],
        "int_value": 999999999999999999999999999999999999999999999999999999999,
        "raw_base": 10,
        "raw_value": "999999999999999999999999999999999999999999999999999999999"
    }
}

STEP 2.5: Detected bitshift request. Performing shift

<NumericObject_class.NumericObject object at 0xb7230d2c>
{
    "__NumericObject__": {
        "base10": [
            5,
            2,
            4,
            2,
            8,
            7,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            9,
            4,
            7,
            5,
            7,
            1,
            2
        ],
        "base16": [
            1,
            4,
            6,
            4,
            3,
            14,
            5,
            10,
            14,
            4,
            4,
            13,
            1,
            2,
            11,
            8,
            15,
            5,
            15,
            14,
            14,
            5,
            10,
            10,
            4,
            3,
            2,
            5,
            6,
            13,
            4,
            1,
            10,
            4,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            8,
            0,
            0,
            0,
            0
        ],
        "base2": [
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            0,
            1,
            1,
            1,
            1,
            0,
            1,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            1,
            0,
            1,
            1,
            0,
            1,
            1,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "custom_base": 37,
        "custom_value": [
            36,
            10,
            17,
            13,
            23,
            27,
            16,
            11,
            28,
            19,
            7,
            14,
            21,
            0,
            36,
            2,
            34,
            30,
            2,
            32,
            32,
            12,
            26,
            36,
            27,
            29,
            1,
            0,
            27,
            2,
            21,
            7,
            29,
            1,
            16,
            29,
            35,
            2,
            10,
            0
        ],
        "int_value": 524287999999999999999999999999999999999999999999999999999475712,
        "raw_base": 10,
        "raw_value": "524287999999999999999999999999999999999999999999999999999475712"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  : 10 1000 1100 1000 0111 1100 1011 0101 1100 1000 1001 1010 0010 0101 0111 0001 1110 1011 1111 1101 1100 1011 0101 0100 1000 0110 0100 1010 1101 1010 1000 0011 0100 1001 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111
BASE_10 : 999999999999999999999999999999999999999999999999999999999
BASE_16 : 28C87CB5C89A2571EBFDCB54864ADA8349FFFFFFFFFFFFFF
BASE_XX : 3IPX6AHHS0DՉՉWO1W6VZH7D1ՉACWC536ZWJW0

--------------------

Shifted number (by << 19)
BASE_2  : 1 0100 0110 0100 0011 1110 0101 1010 1110 0100 0100 1101 0001 0010 1011 1000 1111 0101 1111 1110 1110 0101 1010 1010 0100 0011 0010 0101 0110 1101 0100 0001 1010 0100 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 1000 0000 0000 0000 0000
BASE_10 : 524287999999999999999999999999999999999999999999999999999475712
BASE_16 : 14643E5AE44D12B8F5FEE5AA43256D41A4FFFFFFFFFFFFFF80000
BASE_XX : ՉAHDNRGBSJ7EL0Չ2YU2WWCQՉRT10R2L7T1GTZ2A0

--------------------

Bitshift Comparison

original : 0000 0000 0000 0000 0000 0010 1000 1100 1000 0111 1100 1011 0101 1100 1000 1001 1010 0010 0101 0111 0001 1110 1011 1111 1101 1100 1011 0101 0100 1000 0110 0100 1010 1101 1010 1000 0011 0100 1001 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111
direction: << 19 <<
aftermath: 0001 0100 0110 0100 0011 1110 0101 1010 1110 0100 0100 1101 0001 0010 1011 1000 1111 0101 1111 1110 1110 0101 1010 1010 0100 0011 0010 0101 0110 1101 0100 0001 1010 0100 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 1000 0000 0000 0000 0000

done!





...::: Numeric Information :::...
1426702690 : 2015-03-18 14:18:10





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '15']
FATAL: there are not enough arguments given to use this tool
['args captured:', ['get_numeric_info.py', '15']]




...::: Numeric Information :::...
1426702700 : 2015-03-18 14:18:20





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-b', '15']
Action Data:
{
    "base": 15,
    "custom_base": 0,
    "value": 0
}

STEP 2: Create NumericObject Object





...::: Numeric Information :::...
1426702733 : 2015-03-18 14:18:53





STEP 1: Get Arguments

Raw Serialized Arguments:
['get_numeric_info.py', '-v', '15']
Action Data:
{
    "base": 10,
    "custom_base": 0,
    "value": "15"
}

STEP 2: Create NumericObject Object

<NumericObject_class.NumericObject object at 0xb717eeec>
{
    "__NumericObject__": {
        "base10": [
            1,
            5
        ],
        "base16": [
            15
        ],
        "base2": [
            1,
            1,
            1,
            1
        ],
        "custom_base": 0,
        "custom_value": [],
        "int_value": 15,
        "raw_base": 10,
        "raw_value": "15"
    }
}

STEP 3: Display Report in Pretty Format

Original number
BASE_2  :  1111
BASE_10 : 15
BASE_16 : F
BASE_XX : 

--------------------


done!

